# RUN: xla-translate -hlo-to-mlir-hlo -hlo-flatten-computation-args-result=false %s -o - | FileCheck %s
# RUN: hlo-translate -hlo-to-mlir -emit-mhlo -mlir-print-debuginfo %s | FileCheck %s -check-prefix=FLATTEN-CHECK

# CHECK-LABEL: module @main attributes {
# FLATTEN-CHECK-LABEL: module @main attributes {
hlo_module       {
  name: "main"
  input_output_alias {
    entries {
      output_shape_index: 0
      parameter_number: 0
      kind: MAY_ALIAS
    }
    entries {
      output_shape_index: 1
      parameter_number: 1
      kind: MAY_ALIAS
    }
  }
  entry_computation_name: "main.5"
  computations {
    name: "main.5"
    instructions {
      name: "Arg_0.1"
      opcode: "parameter"
      shape {
        element_type: S32
      }
      id: 1
    }
    instructions {
      name: "Arg_1.2"
      opcode: "parameter"
      shape {
        element_type: TUPLE
        tuple_shapes {
          element_type: S32
          dimensions: 2
          dimensions: 3
          layout {
            minor_to_major: 1
            minor_to_major: 0
          }
          is_dynamic_dimension: false
          is_dynamic_dimension: false
        }
        tuple_shapes {
          element_type: S32
        }
      }
      parameter_number: 1
      id: 2
    }
    instructions {
      name: "copy-start.3"
      opcode: "copy-start"
      shape {
        element_type: TUPLE
        tuple_shapes {
          element_type: TUPLE
          tuple_shapes {
            element_type: S32
            dimensions: 2
            dimensions: 3
            layout {
              minor_to_major: 1
              minor_to_major: 0
            }
            is_dynamic_dimension: false
            is_dynamic_dimension: false
          }
          tuple_shapes {
            element_type: S32
          }
        }
        tuple_shapes {
          element_type: TUPLE
          tuple_shapes {
            element_type: S32
            dimensions: 2
            dimensions: 3
            layout {
              minor_to_major: 1
              minor_to_major: 0
            }
            is_dynamic_dimension: false
            is_dynamic_dimension: false
          }
          tuple_shapes {
            element_type: S32
          }
        }
        tuple_shapes {
          element_type: U32
        }
      }
      metadata {
        source_file: "within split at <stdin>:1 offset "
        source_line: 10
      }
      id: 3
      operand_ids: 2
      cross_program_prefetch_index: 0
    }
    instructions {
      name: "copy-done.4"
      opcode: "copy-done"
      shape {
        element_type: TUPLE
        tuple_shapes {
          element_type: S32
          dimensions: 2
          dimensions: 3
          layout {
            minor_to_major: 1
            minor_to_major: 0
          }
          is_dynamic_dimension: false
          is_dynamic_dimension: false
        }
        tuple_shapes {
          element_type: S32
        }
      }
      metadata {
        source_file: "within split at <stdin>:1 offset "
        source_line: 11
      }
      id: 4
      operand_ids: 3
    }
    program_shape {
      parameters {
        element_type: S32
      }
      parameters {
        element_type: TUPLE
        tuple_shapes {
          element_type: S32
          dimensions: 2
          dimensions: 3
          layout {
            minor_to_major: 1
            minor_to_major: 0
          }
          is_dynamic_dimension: false
          is_dynamic_dimension: false
        }
        tuple_shapes {
          element_type: S32
        }
      }
      result {
        element_type: TUPLE
        tuple_shapes {
          element_type: S32
          dimensions: 2
          dimensions: 3
          layout {
            minor_to_major: 1
            minor_to_major: 0
          }
          is_dynamic_dimension: false
          is_dynamic_dimension: false
        }
        tuple_shapes {
          element_type: S32
        }
      }
      parameter_names: "Arg_0"
      parameter_names: "Arg_1"
    }
    id: 5
    root_id: 4
  }
  host_program_shape {
    parameters {
      element_type: S32
    }
    parameters {
      element_type: TUPLE
      tuple_shapes {
        element_type: S32
        dimensions: 2
        dimensions: 3
        layout {
          minor_to_major: 1
          minor_to_major: 0
        }
        is_dynamic_dimension: false
        is_dynamic_dimension: false
      }
      tuple_shapes {
        element_type: S32
      }
    }
    result {
      element_type: TUPLE
      tuple_shapes {
        element_type: S32
        dimensions: 2
        dimensions: 3
        layout {
          minor_to_major: 1
          minor_to_major: 0
        }
        is_dynamic_dimension: false
        is_dynamic_dimension: false
      }
      tuple_shapes {
        element_type: S32
      }
    }
    parameter_names: "Arg_0"
    parameter_names: "Arg_1"
  }
  id: 5
  entry_computation_id: 5
# CHECK-SAME: mhlo.cross_program_prefetches = [#mhlo.cross_program_prefetch<parameter = 1, indices = [1], offset = 0>]
# FLATTEN-CHECK-SAME: mhlo.cross_program_prefetches = [#mhlo.cross_program_prefetch<parameter = 2, indices = [], offset = 0>]
  cross_program_prefetches {
    parameter: 1
    index: 1
  }
# CHECK-SAME: mhlo.frontend_attributes = {attr_name = "attr_value"}
  frontend_attributes {
    map {
      key: "attr_name"
      value: "attr_value"
    }
  }
# CHECK-SAME: mhlo.input_output_alias = [{alias = {kind = "may_alias", parameter_index = array<i64>, parameter_number = 0 : i64}, output_index = array<i64: 0>}, {alias = {kind = "may_alias", parameter_index = array<i64>, parameter_number = 1 : i64}, output_index = array<i64: 1>}]
# CHECK-SAME: mhlo.is_dynamic = true
  is_dynamic: true
# CHECK-SAME: mhlo.use_auto_spmd_partitioning = true
  use_auto_spmd_partitioning: true
}
