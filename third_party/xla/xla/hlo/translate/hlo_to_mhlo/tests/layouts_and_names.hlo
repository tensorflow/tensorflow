// RUN: hlo-translate -hlo-to-mlir -split-input-file -emit-mhlo -mlir-print-debuginfo %s | FileCheck %s

HloModule Test

// CHECK-LABEL: func @main
ENTRY A {
  %input = f16[128,224,224,4] parameter(0)
  %filter = f16[64,7,7,4] parameter(1)
  // %0 = "mhlo.convolution"{{.*}}minor_to_major = dense<[1, 3, 2, 0]> : tensor<4xindex>{{.*}} loc("root.42")
  ROOT %root.42 = f16[128,64,112,112]{1,3,2,0} convolution(%input, %filter), dim_labels=b01f_o01i->bf01, window={size=7x7 stride=2x2 pad=3_3x3_3}
}

// -----

HloModule Test, entry_computation_layout={(f32[524,524,524]{2,1,0:T(8,128)})->f32[524,524,524]{2,1,0:T(2,2)}}
// CHECK: module @Test
// CHECK-DAG{LITERAL}: mhlo.xla_entry_computation_parameter_layouts = [dense<[2, 1, 0]> : tensor<3xindex>],
// CHECK-DAG{LITERAL}: mhlo.xla_entry_computation_parameter_tiles = [[dense<[8, 128]> : tensor<2xindex>]],
// CHECK-DAG{LITERAL}: mhlo.xla_entry_computation_result_layout = [dense<[2, 1, 0]> : tensor<3xindex>],
// CHECK-DAG{LITERAL}: mhlo.xla_entry_computation_result_tiles = [[dense<2> : tensor<2xindex>]]

// CHECK-LABEL: func @main
ENTRY A {
  ROOT %input = f16[524,524,524] parameter(0)
}

// -----

HloModule TestMultipleArgumentLayouts, entry_computation_layout={(f16[10,20],f16[10,20]{1,0:T(8,128)},f16[],f16[]{:T(256)})->(f16[10,20],f16[10,20]{1,0:T(8,128)},f16[],f16[]{:T(256)})}
// CHECK: module @TestMultipleArgumentLayouts
// CHECK-DAG{LITERAL}: mhlo.xla_entry_computation_parameter_layouts = [dense<> : tensor<0xindex>, dense<[1, 0]> : tensor<2xindex>, dense<> : tensor<0xindex>, dense<> : tensor<0xindex>]
// CHECK-DAG{LITERAL}: mhlo.xla_entry_computation_parameter_tiles = [[], [dense<[8, 128]> : tensor<2xindex>], [], [dense<256> : tensor<1xindex>]]
// CHECK-DAG{LITERAL}: mhlo.xla_entry_computation_result_layout = [dense<> : tensor<0xindex>, dense<[1, 0]> : tensor<2xindex>, dense<> : tensor<0xindex>, dense<> : tensor<0xindex>]
// CHECK-DAG{LITERAL}: mhlo.xla_entry_computation_result_tiles = [[], [dense<[8, 128]> : tensor<2xindex>], [], [dense<256> : tensor<1xindex>]]

// CHECK-LABEL: func @main
ENTRY A {
  %input0 = f16[10,20] parameter(0)
  %input1 = f16[10,20] parameter(1)
  %input3 = f16[] parameter(2)
  %input4 = f16[] parameter(3)
  ROOT %root = (f16[10,20], f16[10,20], f16[], f16[]) tuple(%input0, %input1, %input3, %input4)
}