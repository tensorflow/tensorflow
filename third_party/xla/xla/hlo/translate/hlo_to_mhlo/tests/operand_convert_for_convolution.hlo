// RUN: hlo-translate --hlo-to-mlir --emit-mhlo --split-input-file -verify-diagnostics %s | FileCheck %s

// CHECK-LABEL: func @main
HloModule main, entry_computation_layout={(pred[28,1,1]{2,1,0}, f32[1,28,1]{2,1,0})->f32[1,28,1]{2,1,0}}

ENTRY %main (p0: pred[28,1,1], p1: f32[1,28,1]) -> f32[1,28,1] {
  %p1 = f32[1,28,1]{2,1,0} parameter(1)
  %p0 = pred[28,1,1]{2,1,0} parameter(0)
  // CHECK: %[[convert:.*]] = mhlo.convert %arg0 : (tensor<28x1x1xi1>) -> tensor<28x1x1xf32>
  // CHECK-NEXT: mhlo.convolution(%arg1, %[[convert]])
  ROOT %convolution.9 = f32[1,28,1]{2,1,0} convolution(f32[1,28,1]{2,1,0} %p1, pred[28,1,1]{2,1,0} %p0), window={size=28 pad=13_14}, dim_labels=b0f_0io->b0f
}

// -----

// CHECK-LABEL: func @main
HloModule main, entry_computation_layout={(f32[28,1,1]{2,1,0}, pred[1,28,1]{2,1,0})->f32[1,28,1]{2,1,0}}

ENTRY %main.10 (p0: f32[28,1,1], p1: pred[1,28,1]) -> f32[1,28,1] {
  %p1 = pred[1,28,1]{2,1,0} parameter(1)
  %p0 = f32[28,1,1]{2,1,0} parameter(0)
  // CHECK: %[[CONVERT:.*]] = mhlo.convert %arg1 : (tensor<1x28x1xi1>) -> tensor<1x28x1xf32>
  // CHECK-NEXT: mhlo.convolution(%[[CONVERT]], %arg0)
  ROOT %convolution.9 = f32[1,28,1]{2,1,0} convolution(pred[1,28,1]{2,1,0} %p1, f32[28,1,1]{2,1,0} %p0), window={size=28 pad=13_14}, dim_labels=b0f_0io->b0f
}

// -----

// expected-error@-3 {{Unsupported conversion between element types of operands (f8e8m0fnu[1,28,1] and pred[28,1,1]) for convolution.}}
HloModule main, entry_computation_layout={(pred[28,1,1]{2,1,0}, f8e8m0fnu[1,28,1]{2,1,0})->pred[1,28,1]{2,1,0}}

ENTRY %main.10 (p0: pred[28,1,1], p1: f8e8m0fnu[1,28,1]) -> pred[1,28,1] {
  %p1 = f8e8m0fnu[1,28,1]{2,1,0} parameter(1)
  %p0 = pred[28,1,1]{2,1,0} parameter(0)
  ROOT %convolution.9 = pred[1,28,1]{2,1,0} convolution(f8e8m0fnu[1,28,1]{2,1,0} %p1, pred[28,1,1]{2,1,0} %p0), window={size=28 pad=13_14}, dim_labels=b0f_0io->b0f
}
