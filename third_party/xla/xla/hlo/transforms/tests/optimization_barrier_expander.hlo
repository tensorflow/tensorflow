// NOTE: Assertions have been autogenerated by hlo/tools/generate_hlo_test_checks.py
// RUN: hlo-opt %s --passes=algsimp,cse_barrier_expander | FileCheck %s

// CHECK-LABEL: HloModule TestExpandOptBarrierToNoOp, entry_computation_layout={(s32[8]{0}, s32[8]{0}, s32[8]{0})->s32[8]{0}}

// CHECK-LABEL: ENTRY %test_case
// CHECK-NEXT:  %[[a:[^ ]+]] = s32[8]{0} parameter(0)
// CHECK-NEXT:  %[[c:[^ ]+]] = s32[8]{0} parameter(2)
// CHECK-NEXT:  %[[ac:[^ ]+]] = s32[8]{0} multiply(%[[a]], %[[c]])
// CHECK-NEXT:  %[[b:[^ ]+]] = s32[8]{0} parameter(1)
// CHECK-NEXT:  %[[bc:[^ ]+]] = s32[8]{0} multiply(%[[b]], %[[c]])
// CHECK-NEXT:  ROOT %[[ac_plus_bc:[^ ]+]] = s32[8]{0} add(%[[ac]], %[[bc]])

HloModule TestExpandOptBarrierToNoOp

ENTRY test_case {
  a = s32[8] parameter(0)
  b = s32[8] parameter(1)
  c = s32[8] parameter(2)
  ac = s32[8] multiply(a, c)
  bc = s32[8] multiply(b, c)
  ac_barrier = s32[8] opt-barrier(ac)
  bc_barrier = s32[8] opt-barrier(bc)
  ROOT ac_plus_bc = s32[8] add(ac_barrier, bc_barrier)
}
