// NOTE: Assertions have been autogenerated by hlo/tools/generate_hlo_test_checks.py
// RUN: hlo-opt %s --split-input-file --passes=operand_upcaster | FileCheck %s

// CHECK-LABEL: HloModule TestDot, entry_computation_layout={(s8[8]{0}, s16[8]{0})->s32[8]{0}}

// CHECK-LABEL: ENTRY %test_dot
// CHECK-NEXT:  %[[a:[^ ]+]] = s8[8]{0} parameter(0)
// CHECK-NEXT:  %[[convert:[^ ]+]] = s32[8]{0} convert(%[[a]])
// CHECK-NEXT:  %[[b:[^ ]+]] = s16[8]{0} parameter(1)
// CHECK-NEXT:  %[[convert_1:[^ ]+]] = s32[8]{0} convert(%[[b]])
// CHECK-NEXT:  ROOT %[[result:[^ ]+]] = s32[8]{0} dot(%[[convert]], %[[convert_1]]), lhs_contracting_dims={}, rhs_contracting_dims={}

HloModule TestDot

ENTRY test_dot {
  a = s8[8] parameter(0)
  b = s16[8] parameter(1)
  ROOT result = s32[8] dot(a, b)
}
