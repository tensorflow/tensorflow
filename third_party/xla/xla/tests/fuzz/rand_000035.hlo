/* This file is autogenerated! Please don't edit! */
HloModule xla_computation_unknown, entry_computation_layout={(pred[],c64[12]{0})->(f32[11,3,2]{2,1,0})}

region_1.10 {
  Arg_0.11 = f32[] parameter(0)
  Arg_1.12 = f32[] parameter(1)
  ROOT add.13 = f32[] add(Arg_0.11, Arg_1.12)
}

region_0.14 {
  Arg_.15 = c64[12]{0} parameter(0)
  real.19 = f32[12]{0} real(Arg_.15)
  broadcast.20 = f32[11,3,12]{2,1,0} broadcast(real.19), dimensions={2}
  constant.18 = f32[] constant(0)
  reduce.21 = f32[11,3]{1,0} reduce(broadcast.20, constant.18), dimensions={2}, to_apply=region_1.10
  broadcast.22 = f32[2,11,3]{2,1,0} broadcast(reduce.21), dimensions={1,2}
  reshape.23 = f32[11,3,2]{2,1,0} reshape(broadcast.22)
  constant.16 = f32[] constant(1)
  broadcast.17 = f32[11,3,2]{2,1,0} broadcast(constant.16), dimensions={}
  ROOT add.24 = f32[11,3,2]{2,1,0} add(reshape.23, broadcast.17)
}

region_3.25 {
  Arg_0.26 = f32[] parameter(0)
  Arg_1.27 = f32[] parameter(1)
  ROOT add.28 = f32[] add(Arg_0.26, Arg_1.27)
}

region_2.29 {
  arg_empty_tuple.30 = () parameter(0)
  constant.32 = f32[] constant(1)
  broadcast.33 = f32[182,9,10]{2,1,0} broadcast(constant.32), dimensions={}
  constant.31 = f32[] constant(0)
  reduce.34 = f32[] reduce(broadcast.33, constant.31), dimensions={0,1,2}, to_apply=region_3.25
  ROOT broadcast.35 = f32[11,3,2]{2,1,0} broadcast(reduce.34), dimensions={}
}

ENTRY main.38 {
  Arg_0.1 = pred[] parameter(0)
  constant.5 = pred[] constant(true)
  xor.6 = pred[] xor(Arg_0.1, constant.5)
  convert.8 = s32[] convert(xor.6)
  constant.3 = c64[] constant((1, 0))
  broadcast.4 = c64[12]{0} broadcast(constant.3), dimensions={}
  Arg_1.2 = c64[12]{0} parameter(1)
  atan2.7 = c64[12]{0} atan2(broadcast.4, Arg_1.2)
  tuple.9 = () tuple()
  conditional.36 = f32[11,3,2]{2,1,0} conditional(convert.8, atan2.7, tuple.9), branch_computations={region_0.14, region_2.29}
  ROOT tuple.37 = (f32[11,3,2]{2,1,0}) tuple(conditional.36)
}

