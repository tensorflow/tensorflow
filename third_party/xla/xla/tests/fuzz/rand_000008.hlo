/* This file is autogenerated! Please don't edit! */
HloModule xla_computation_unknown, entry_computation_layout={(f16[16,2,11]{2,1,0})->(f16[13,2]{1,0})}

region_0.115 {
  Arg_0.116 = f16[] parameter(0)
  Arg_1.117 = f16[] parameter(1)
  ROOT minimum.118 = f16[] minimum(Arg_0.116, Arg_1.117)
}

ENTRY main.121 {
  constant.4 = f16[] constant(1)
  broadcast.5 = f16[13,2]{1,0} broadcast(constant.4), dimensions={}
  log-plus-one.54 = f16[13,2]{1,0} log-plus-one(broadcast.5)
  constant.2 = s32[] constant(0)
  broadcast.3 = s32[16,11,1]{2,1,0} broadcast(constant.2), dimensions={}
  Arg_0.1 = f16[16,2,11]{2,1,0} parameter(0)
  constant.52 = f16[] constant(0.0078125)
  broadcast.53 = f16[16,2,11]{2,1,0} broadcast(constant.52), dimensions={}
  maximum.55 = f16[16,2,11]{2,1,0} maximum(Arg_0.1, broadcast.53)
  convert.56 = f32[16,2,11]{2,1,0} convert(maximum.55)
  abs.111 = f32[16,2,11]{2,1,0} abs(convert.56)
  constant.6 = f32[] constant(inf)
  broadcast.7 = f32[16,2,11]{2,1,0} broadcast(constant.6), dimensions={}
  compare.112 = pred[16,2,11]{2,1,0} compare(abs.111, broadcast.7), direction=EQ
  constant.50 = f32[] constant(0.5)
  broadcast.51 = f32[16,2,11]{2,1,0} broadcast(constant.50), dimensions={}
  compare.57 = pred[16,2,11]{2,1,0} compare(convert.56, broadcast.51), direction=LT
  abs.96 = f32[16,2,11]{2,1,0} abs(convert.56)
  floor.97 = f32[16,2,11]{2,1,0} floor(abs.96)
  subtract.98 = f32[16,2,11]{2,1,0} subtract(abs.96, floor.97)
  compare.99 = pred[16,2,11]{2,1,0} compare(broadcast.51, subtract.98), direction=LT
  constant.48 = f32[] constant(1)
  broadcast.49 = f32[16,2,11]{2,1,0} broadcast(constant.48), dimensions={}
  subtract.100 = f32[16,2,11]{2,1,0} subtract(broadcast.49, subtract.98)
  select.101 = f32[16,2,11]{2,1,0} select(compare.99, subtract.100, subtract.98)
  constant.10 = f32[] constant(3.14159274)
  broadcast.11 = f32[16,2,11]{2,1,0} broadcast(constant.10), dimensions={}
  multiply.102 = f32[16,2,11]{2,1,0} multiply(select.101, broadcast.11)
  sine.103 = f32[16,2,11]{2,1,0} sine(multiply.102)
  log.104 = f32[16,2,11]{2,1,0} log(sine.103)
  is-finite.107 = pred[16,2,11]{2,1,0} is-finite(log.104)
  constant.8 = f32[] constant(1.14472985)
  broadcast.9 = f32[16,2,11]{2,1,0} broadcast(constant.8), dimensions={}
  subtract.105 = f32[16,2,11]{2,1,0} subtract(broadcast.9, log.104)
  negate.58 = f32[16,2,11]{2,1,0} negate(convert.56)
  subtract.59 = f32[16,2,11]{2,1,0} subtract(convert.56, broadcast.49)
  select.60 = f32[16,2,11]{2,1,0} select(compare.57, negate.58, subtract.59)
  add.90 = f32[16,2,11]{2,1,0} add(select.60, broadcast.51)
  constant.16 = f32[] constant(7.5)
  broadcast.17 = f32[16,2,11]{2,1,0} broadcast(constant.16), dimensions={}
  add.85 = f32[16,2,11]{2,1,0} add(select.60, broadcast.17)
  divide.86 = f32[16,2,11]{2,1,0} divide(select.60, broadcast.17)
  log-plus-one.87 = f32[16,2,11]{2,1,0} log-plus-one(divide.86)
  constant.14 = f32[] constant(2.01490307)
  broadcast.15 = f32[16,2,11]{2,1,0} broadcast(constant.14), dimensions={}
  add.88 = f32[16,2,11]{2,1,0} add(log-plus-one.87, broadcast.15)
  divide.89 = f32[16,2,11]{2,1,0} divide(add.85, add.88)
  subtract.91 = f32[16,2,11]{2,1,0} subtract(add.90, divide.89)
  multiply.92 = f32[16,2,11]{2,1,0} multiply(subtract.91, add.88)
  constant.12 = f32[] constant(0.918938518)
  broadcast.13 = f32[16,2,11]{2,1,0} broadcast(constant.12), dimensions={}
  add.94 = f32[16,2,11]{2,1,0} add(multiply.92, broadcast.13)
  constant.46 = f32[] constant(676.520386)
  broadcast.47 = f32[16,2,11]{2,1,0} broadcast(constant.46), dimensions={}
  add.61 = f32[16,2,11]{2,1,0} add(select.60, broadcast.49)
  divide.62 = f32[16,2,11]{2,1,0} divide(broadcast.47, add.61)
  add.63 = f32[16,2,11]{2,1,0} add(divide.62, broadcast.49)
  constant.44 = f32[] constant(-1259.13916)
  broadcast.45 = f32[16,2,11]{2,1,0} broadcast(constant.44), dimensions={}
  constant.42 = f32[] constant(2)
  broadcast.43 = f32[16,2,11]{2,1,0} broadcast(constant.42), dimensions={}
  add.64 = f32[16,2,11]{2,1,0} add(select.60, broadcast.43)
  divide.65 = f32[16,2,11]{2,1,0} divide(broadcast.45, add.64)
  add.66 = f32[16,2,11]{2,1,0} add(add.63, divide.65)
  constant.40 = f32[] constant(771.323425)
  broadcast.41 = f32[16,2,11]{2,1,0} broadcast(constant.40), dimensions={}
  constant.38 = f32[] constant(3)
  broadcast.39 = f32[16,2,11]{2,1,0} broadcast(constant.38), dimensions={}
  add.67 = f32[16,2,11]{2,1,0} add(select.60, broadcast.39)
  divide.68 = f32[16,2,11]{2,1,0} divide(broadcast.41, add.67)
  add.69 = f32[16,2,11]{2,1,0} add(add.66, divide.68)
  constant.36 = f32[] constant(-176.615036)
  broadcast.37 = f32[16,2,11]{2,1,0} broadcast(constant.36), dimensions={}
  constant.34 = f32[] constant(4)
  broadcast.35 = f32[16,2,11]{2,1,0} broadcast(constant.34), dimensions={}
  add.70 = f32[16,2,11]{2,1,0} add(select.60, broadcast.35)
  divide.71 = f32[16,2,11]{2,1,0} divide(broadcast.37, add.70)
  add.72 = f32[16,2,11]{2,1,0} add(add.69, divide.71)
  constant.32 = f32[] constant(12.5073433)
  broadcast.33 = f32[16,2,11]{2,1,0} broadcast(constant.32), dimensions={}
  constant.30 = f32[] constant(5)
  broadcast.31 = f32[16,2,11]{2,1,0} broadcast(constant.30), dimensions={}
  add.73 = f32[16,2,11]{2,1,0} add(select.60, broadcast.31)
  divide.74 = f32[16,2,11]{2,1,0} divide(broadcast.33, add.73)
  add.75 = f32[16,2,11]{2,1,0} add(add.72, divide.74)
  constant.28 = f32[] constant(-0.138571098)
  broadcast.29 = f32[16,2,11]{2,1,0} broadcast(constant.28), dimensions={}
  constant.26 = f32[] constant(6)
  broadcast.27 = f32[16,2,11]{2,1,0} broadcast(constant.26), dimensions={}
  add.76 = f32[16,2,11]{2,1,0} add(select.60, broadcast.27)
  divide.77 = f32[16,2,11]{2,1,0} divide(broadcast.29, add.76)
  add.78 = f32[16,2,11]{2,1,0} add(add.75, divide.77)
  constant.24 = f32[] constant(9.98436917e-06)
  broadcast.25 = f32[16,2,11]{2,1,0} broadcast(constant.24), dimensions={}
  constant.22 = f32[] constant(7)
  broadcast.23 = f32[16,2,11]{2,1,0} broadcast(constant.22), dimensions={}
  add.79 = f32[16,2,11]{2,1,0} add(select.60, broadcast.23)
  divide.80 = f32[16,2,11]{2,1,0} divide(broadcast.25, add.79)
  add.81 = f32[16,2,11]{2,1,0} add(add.78, divide.80)
  constant.20 = f32[] constant(1.50563267e-07)
  broadcast.21 = f32[16,2,11]{2,1,0} broadcast(constant.20), dimensions={}
  constant.18 = f32[] constant(8)
  broadcast.19 = f32[16,2,11]{2,1,0} broadcast(constant.18), dimensions={}
  add.82 = f32[16,2,11]{2,1,0} add(select.60, broadcast.19)
  divide.83 = f32[16,2,11]{2,1,0} divide(broadcast.21, add.82)
  add.84 = f32[16,2,11]{2,1,0} add(add.81, divide.83)
  log.93 = f32[16,2,11]{2,1,0} log(add.84)
  add.95 = f32[16,2,11]{2,1,0} add(add.94, log.93)
  subtract.106 = f32[16,2,11]{2,1,0} subtract(subtract.105, add.95)
  negate.108 = f32[16,2,11]{2,1,0} negate(log.104)
  select.109 = f32[16,2,11]{2,1,0} select(is-finite.107, subtract.106, negate.108)
  select.110 = f32[16,2,11]{2,1,0} select(compare.57, select.109, add.95)
  select.113 = f32[16,2,11]{2,1,0} select(compare.112, broadcast.7, select.110)
  convert.114 = f16[16,2,11]{2,1,0} convert(select.113)
  scatter.119 = f16[13,2]{1,0} scatter(log-plus-one.54, broadcast.3, convert.114), update_window_dims={1}, inserted_window_dims={0}, scatter_dims_to_operand_dims={1}, index_vector_dim=2, to_apply=region_0.115
  ROOT tuple.120 = (f16[13,2]{1,0}) tuple(scatter.119)
}

