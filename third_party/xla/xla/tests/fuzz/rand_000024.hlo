/* This file is autogenerated! Please don't edit! */
HloModule xla_computation_unknown, entry_computation_layout={(f16[10]{0})->(f16[10]{0})}

ENTRY main.111 {
  Arg_0.1 = f16[10]{0} parameter(0)
  constant.48 = f16[] constant(0.0078125)
  broadcast.49 = f16[10]{0} broadcast(constant.48), dimensions={}
  maximum.50 = f16[10]{0} maximum(Arg_0.1, broadcast.49)
  convert.51 = f32[10]{0} convert(maximum.50)
  abs.106 = f32[10]{0} abs(convert.51)
  constant.2 = f32[] constant(inf)
  broadcast.3 = f32[10]{0} broadcast(constant.2), dimensions={}
  compare.107 = pred[10]{0} compare(abs.106, broadcast.3), direction=EQ
  constant.46 = f32[] constant(0.5)
  broadcast.47 = f32[10]{0} broadcast(constant.46), dimensions={}
  compare.52 = pred[10]{0} compare(convert.51, broadcast.47), direction=LT
  abs.91 = f32[10]{0} abs(convert.51)
  floor.92 = f32[10]{0} floor(abs.91)
  subtract.93 = f32[10]{0} subtract(abs.91, floor.92)
  compare.94 = pred[10]{0} compare(broadcast.47, subtract.93), direction=LT
  constant.44 = f32[] constant(1)
  broadcast.45 = f32[10]{0} broadcast(constant.44), dimensions={}
  subtract.95 = f32[10]{0} subtract(broadcast.45, subtract.93)
  select.96 = f32[10]{0} select(compare.94, subtract.95, subtract.93)
  constant.6 = f32[] constant(3.14159274)
  broadcast.7 = f32[10]{0} broadcast(constant.6), dimensions={}
  multiply.97 = f32[10]{0} multiply(select.96, broadcast.7)
  sine.98 = f32[10]{0} sine(multiply.97)
  log.99 = f32[10]{0} log(sine.98)
  is-finite.102 = pred[10]{0} is-finite(log.99)
  constant.4 = f32[] constant(1.14472985)
  broadcast.5 = f32[10]{0} broadcast(constant.4), dimensions={}
  subtract.100 = f32[10]{0} subtract(broadcast.5, log.99)
  negate.53 = f32[10]{0} negate(convert.51)
  subtract.54 = f32[10]{0} subtract(convert.51, broadcast.45)
  select.55 = f32[10]{0} select(compare.52, negate.53, subtract.54)
  add.85 = f32[10]{0} add(select.55, broadcast.47)
  constant.12 = f32[] constant(7.5)
  broadcast.13 = f32[10]{0} broadcast(constant.12), dimensions={}
  add.80 = f32[10]{0} add(select.55, broadcast.13)
  divide.81 = f32[10]{0} divide(select.55, broadcast.13)
  log-plus-one.82 = f32[10]{0} log-plus-one(divide.81)
  constant.10 = f32[] constant(2.01490307)
  broadcast.11 = f32[10]{0} broadcast(constant.10), dimensions={}
  add.83 = f32[10]{0} add(log-plus-one.82, broadcast.11)
  divide.84 = f32[10]{0} divide(add.80, add.83)
  subtract.86 = f32[10]{0} subtract(add.85, divide.84)
  multiply.87 = f32[10]{0} multiply(subtract.86, add.83)
  constant.8 = f32[] constant(0.918938518)
  broadcast.9 = f32[10]{0} broadcast(constant.8), dimensions={}
  add.89 = f32[10]{0} add(multiply.87, broadcast.9)
  constant.42 = f32[] constant(676.520386)
  broadcast.43 = f32[10]{0} broadcast(constant.42), dimensions={}
  add.56 = f32[10]{0} add(select.55, broadcast.45)
  divide.57 = f32[10]{0} divide(broadcast.43, add.56)
  add.58 = f32[10]{0} add(divide.57, broadcast.45)
  constant.40 = f32[] constant(-1259.13916)
  broadcast.41 = f32[10]{0} broadcast(constant.40), dimensions={}
  constant.38 = f32[] constant(2)
  broadcast.39 = f32[10]{0} broadcast(constant.38), dimensions={}
  add.59 = f32[10]{0} add(select.55, broadcast.39)
  divide.60 = f32[10]{0} divide(broadcast.41, add.59)
  add.61 = f32[10]{0} add(add.58, divide.60)
  constant.36 = f32[] constant(771.323425)
  broadcast.37 = f32[10]{0} broadcast(constant.36), dimensions={}
  constant.34 = f32[] constant(3)
  broadcast.35 = f32[10]{0} broadcast(constant.34), dimensions={}
  add.62 = f32[10]{0} add(select.55, broadcast.35)
  divide.63 = f32[10]{0} divide(broadcast.37, add.62)
  add.64 = f32[10]{0} add(add.61, divide.63)
  constant.32 = f32[] constant(-176.615036)
  broadcast.33 = f32[10]{0} broadcast(constant.32), dimensions={}
  constant.30 = f32[] constant(4)
  broadcast.31 = f32[10]{0} broadcast(constant.30), dimensions={}
  add.65 = f32[10]{0} add(select.55, broadcast.31)
  divide.66 = f32[10]{0} divide(broadcast.33, add.65)
  add.67 = f32[10]{0} add(add.64, divide.66)
  constant.28 = f32[] constant(12.5073433)
  broadcast.29 = f32[10]{0} broadcast(constant.28), dimensions={}
  constant.26 = f32[] constant(5)
  broadcast.27 = f32[10]{0} broadcast(constant.26), dimensions={}
  add.68 = f32[10]{0} add(select.55, broadcast.27)
  divide.69 = f32[10]{0} divide(broadcast.29, add.68)
  add.70 = f32[10]{0} add(add.67, divide.69)
  constant.24 = f32[] constant(-0.138571098)
  broadcast.25 = f32[10]{0} broadcast(constant.24), dimensions={}
  constant.22 = f32[] constant(6)
  broadcast.23 = f32[10]{0} broadcast(constant.22), dimensions={}
  add.71 = f32[10]{0} add(select.55, broadcast.23)
  divide.72 = f32[10]{0} divide(broadcast.25, add.71)
  add.73 = f32[10]{0} add(add.70, divide.72)
  constant.20 = f32[] constant(9.98436917e-06)
  broadcast.21 = f32[10]{0} broadcast(constant.20), dimensions={}
  constant.18 = f32[] constant(7)
  broadcast.19 = f32[10]{0} broadcast(constant.18), dimensions={}
  add.74 = f32[10]{0} add(select.55, broadcast.19)
  divide.75 = f32[10]{0} divide(broadcast.21, add.74)
  add.76 = f32[10]{0} add(add.73, divide.75)
  constant.16 = f32[] constant(1.50563267e-07)
  broadcast.17 = f32[10]{0} broadcast(constant.16), dimensions={}
  constant.14 = f32[] constant(8)
  broadcast.15 = f32[10]{0} broadcast(constant.14), dimensions={}
  add.77 = f32[10]{0} add(select.55, broadcast.15)
  divide.78 = f32[10]{0} divide(broadcast.17, add.77)
  add.79 = f32[10]{0} add(add.76, divide.78)
  log.88 = f32[10]{0} log(add.79)
  add.90 = f32[10]{0} add(add.89, log.88)
  subtract.101 = f32[10]{0} subtract(subtract.100, add.90)
  negate.103 = f32[10]{0} negate(log.99)
  select.104 = f32[10]{0} select(is-finite.102, subtract.101, negate.103)
  select.105 = f32[10]{0} select(compare.52, select.104, add.90)
  select.108 = f32[10]{0} select(compare.107, broadcast.3, select.105)
  convert.109 = f16[10]{0} convert(select.108)
  ROOT tuple.110 = (f16[10]{0}) tuple(convert.109)
}

