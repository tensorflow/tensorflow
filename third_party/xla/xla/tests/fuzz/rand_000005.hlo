/* This file is autogenerated! Please don't edit! */
HloModule xla_computation_unknown, entry_computation_layout={(u16[5,3,2,12,3,6]{5,4,3,2,1,0},s32[6,2]{1,0},u16[6,3,1]{2,1,0},u16[6,3,1]{2,1,0})->(u16[6,3,12,14,3]{4,3,2,1,0})}

region_0.15 {
  Arg_0.16 = u16[] parameter(0)
  ROOT Arg_1.17 = u16[] parameter(1)
}

region_1.23 {
  Arg_0.24 = u16[] parameter(0)
  Arg_1.25 = u16[] parameter(1)
  ROOT minimum.26 = u16[] minimum(Arg_0.24, Arg_1.25)
}

ENTRY main.29 {
  constant.5 = u16[] constant(1)
  broadcast.6 = u16[6,3,12,14,3]{4,3,2,1,0} broadcast(constant.5), dimensions={}
  constant.7 = s32[] constant(1)
  broadcast.8 = s32[6,5]{1,0} broadcast(constant.7), dimensions={}
  Arg_0.1 = u16[5,3,2,12,3,6]{5,4,3,2,1,0} parameter(0)
  scatter.18 = u16[6,3,12,14,3]{4,3,2,1,0} scatter(broadcast.6, broadcast.8, Arg_0.1), update_window_dims={0,1,2,3,4}, inserted_window_dims={}, scatter_dims_to_operand_dims={3,2,0,4,1}, index_vector_dim=1, to_apply=region_0.15
  Arg_1.2 = s32[6,2]{1,0} parameter(1)
  constant.9 = s32[] constant(1)
  broadcast.10 = s32[6,2]{1,0} broadcast(constant.9), dimensions={}
  xor.19 = s32[6,2]{1,0} xor(Arg_1.2, broadcast.10)
  Arg_2.3 = u16[6,3,1]{2,1,0} parameter(2)
  constant.11 = u16[] constant(0)
  broadcast.12 = u16[6,3,1]{2,1,0} broadcast(constant.11), dimensions={}
  Arg_3.4 = u16[6,3,1]{2,1,0} parameter(3)
  compare.20 = pred[6,3,1]{2,1,0} compare(broadcast.12, Arg_3.4), direction=EQ
  constant.13 = u16[] constant(1)
  broadcast.14 = u16[6,3,1]{2,1,0} broadcast(constant.13), dimensions={}
  select.21 = u16[6,3,1]{2,1,0} select(compare.20, broadcast.14, Arg_3.4)
  divide.22 = u16[6,3,1]{2,1,0} divide(Arg_2.3, select.21)
  scatter.27 = u16[6,3,12,14,3]{4,3,2,1,0} scatter(scatter.18, xor.19, divide.22), update_window_dims={1,2}, inserted_window_dims={2,3,4}, scatter_dims_to_operand_dims={4,0}, index_vector_dim=1, to_apply=region_1.23
  ROOT tuple.28 = (u16[6,3,12,14,3]{4,3,2,1,0}) tuple(scatter.27)
}

