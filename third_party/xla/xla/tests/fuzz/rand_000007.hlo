/* This file is autogenerated! Please don't edit! */
HloModule xla_computation_unknown, entry_computation_layout={(pred[])->(u16[7,11,11,3]{3,2,1,0})}

region_1.9 {
  Arg_0.10 = s32[] parameter(0)
  Arg_1.11 = s32[] parameter(1)
  ROOT add.12 = s32[] add(Arg_0.10, Arg_1.11)
}

region_0.13 {
  arg_empty_tuple.14 = () parameter(0)
  constant.16 = s32[] constant(1)
  broadcast.17 = s32[5]{0} broadcast(constant.16), dimensions={}
  constant.15 = s32[] constant(0)
  reduce.18 = s32[] reduce(broadcast.17, constant.15), dimensions={0}, to_apply=region_1.9
  ROOT broadcast.19 = s32[4]{0} broadcast(reduce.18), dimensions={}
}

region_3.20 {
  Arg_0.21 = s32[] parameter(0)
  Arg_1.22 = s32[] parameter(1)
  ROOT add.23 = s32[] add(Arg_0.21, Arg_1.22)
}

region_2.24 {
  arg_empty_tuple.25 = () parameter(0)
  constant.27 = s32[] constant(1)
  broadcast.28 = s32[5]{0} broadcast(constant.27), dimensions={}
  constant.26 = s32[] constant(0)
  reduce.29 = s32[] reduce(broadcast.28, constant.26), dimensions={0}, to_apply=region_3.20
  ROOT broadcast.30 = s32[4]{0} broadcast(reduce.29), dimensions={}
}

region_4.32 {
  Arg_0.33 = u16[] parameter(0)
  Arg_1.34 = u16[] parameter(1)
  ROOT multiply.35 = u16[] multiply(Arg_0.33, Arg_1.34)
}

ENTRY main.38 {
  constant.4 = u16[] constant(1)
  broadcast.5 = u16[7,11,11,3]{3,2,1,0} broadcast(constant.4), dimensions={}
  Arg_0.1 = pred[] parameter(0)
  convert.6 = s32[] convert(Arg_0.1)
  tuple.7 = () tuple()
  tuple.8 = () tuple()
  conditional.31 = s32[4]{0} conditional(convert.6, tuple.7, tuple.8), branch_computations={region_0.13, region_2.24}
  constant.2 = u16[] constant(1)
  broadcast.3 = u16[6,8,7,2]{3,2,1,0} broadcast(constant.2), dimensions={}
  scatter.36 = u16[7,11,11,3]{3,2,1,0} scatter(broadcast.5, conditional.31, broadcast.3), update_window_dims={0,1,2,3}, inserted_window_dims={}, scatter_dims_to_operand_dims={2,0,1,3}, index_vector_dim=0, to_apply=region_4.32
  ROOT tuple.37 = (u16[7,11,11,3]{3,2,1,0}) tuple(scatter.36)
}

