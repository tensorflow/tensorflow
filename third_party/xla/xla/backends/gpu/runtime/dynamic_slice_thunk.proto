/* Copyright 2025 The OpenXLA Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
==============================================================================*/

// This file contains proto representations of arguments to DynamicSliceThunk.
// The DynamicSliceThunkProto itself is defined in thunk.proto, along with the
// other ThunkProto types.

syntax = "proto3";

package xla.gpu;

import "xla/service/buffer_assignment.proto";
import "xla/xla.proto";
import "xla/xla_data.proto";

message OptionalBufferAllocationSliceProto {
  optional xla.buffer_assignment.BufferAllocationSliceProto slice = 1;
}

message OptionalShapeProto {
  optional xla.ShapeProto shape = 1;
}

message OptionalInt64Proto {
  optional int64 value = 1;
}

// Reflects std::optional<std::vector<Offset>>
message OptionalDynamicSliceOffsetsProto {
  message DynamicSliceOffsetProto {
    oneof offset {
      int64 const_offset = 1;
      xla.buffer_assignment.BufferAllocationSliceProto slice_offset = 2;
      // Index of the HLO module in the list of extracted_offset_modules in
      // the OffsetAsFunctionOfIndvarModulesMetadataProto.
      int64 hlo_module_offset_idx = 3;
    }
  }

  message DynamicSliceOffsetsProto {
    repeated DynamicSliceOffsetProto offsets = 1;
  }
  optional DynamicSliceOffsetsProto offsets = 1;
}

message OffsetAsFunctionOfIndvarModulesMetadataProto {
  xla.HloModuleProtoWithConfig indvar_init = 1;
  xla.HloModuleProtoWithConfig indvar_update = 2;
  repeated xla.HloModuleProtoWithConfig extracted_offset_modules = 3;
}
