/* Copyright 2025 The OpenXLA Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
==============================================================================*/

syntax = "proto3";

package xla.gpu;

import "xla/service/buffer_assignment.proto";

// Contains basic pieces of information that every thunk type has.
message ThunkInfoProto {
  string profile_annotation = 1;
  int64 execution_stream_id = 2;
}

message CopyThunkProto {
  xla.buffer_assignment.BufferAllocationSliceProto source_buffer = 1;
  xla.buffer_assignment.BufferAllocationSliceProto destination_buffer = 2;
  int64 mem_size = 3;
}

message DeviceToHostCopyThunkProto {
  CopyThunkProto copy_thunk = 1;
}

message HostToDeviceCopyThunkProto {
  CopyThunkProto copy_thunk = 1;
}

message ConditionalThunkProto {
  xla.buffer_assignment.BufferAllocationSliceProto branch_index_buffer = 1;
  repeated SequentialThunkProto branch_thunks = 2;
  bool branch_index_is_bool = 3;
}

message ThunkProto {
  ThunkInfoProto thunk_info = 1;

  oneof impl {
    SequentialThunkProto sequential_thunk = 2;
    CopyThunkProto copy_thunk = 3;
    DeviceToHostCopyThunkProto device_to_host_copy_thunk = 4;
    HostToDeviceCopyThunkProto host_to_device_copy_thunk = 5;
    ConditionalThunkProto conditional_thunk = 6;
  }
}

message SequentialThunkProto {
  repeated ThunkProto thunks = 1;
}
