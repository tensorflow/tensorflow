// RUN: fusion_to_mlir %s | emitters_opt -xla-gpu-test-optimize \
// RUN:   -xla-gpu-test-transform-loops | FileCheck %s

// The reference implementation reduces in f64, so we need a larger tolerance.
// RUN: test_correctness %s --bijection_inputs=reduce:0 \
// RUN:  --bijection_outputs=reduce --abs_error_bound=0.005 --rel_error_bound=0.005

add {
  lhs = f16[] parameter(0)
  rhs = f16[] parameter(1)
  ROOT add = f16[] add(lhs, rhs)
}

fusion {
  param_0 = f16[2048,64] parameter(0)
  c = f16[] constant(0)
  ROOT reduce = f16[2048] reduce(param_0, c), dimensions={1}, to_apply=add
}

// If unvectorized, this would be a regular row reduction. However, since we can
// vectorize to size four, we can emit this as a multi-row reduction.
// CHECK: vector.transfer_read {{.*}} vector<4xf16>
