syntax = "proto3";

package xla.cpu;

import "xla/service/cpu/onednn_config.proto";

// Backend config for a general custom call instruction, e.g. XLA FFI.
message CustomCallBackendConfig {
  // Generic configurations that can be parsed by XLA.
  oneof raw_backend_config_oneof {
    // An opaque ASCII string could be parsed by the compiler.
    string opaque = 1;
    // Attributes parsed by XLA FFI.
    string attributes = 2;
  }
}

message FusionBackendConfig {
  string kind = 1;
}

// Backend config for XLA:CPU.
message BackendConfig {
  // Number of partitions per outer dimension (in order, starting with
  // outer-most dimension first). Used by the parallel cpu backend to partition
  // HLOs into parallel tasks.
  repeated int64 outer_dimension_partitions = 1;
  oneof backend_config_oneof {
    // Configuration to be used by oneDNN matmul
    OneDnnMatMulConfig onednn_matmul_config = 2;
    // Configuration to be used by oneDNN layer norm
    OneDnnNormConfig onednn_layer_norm_config = 3;
    // Configuration to be used by oneDNN softmax
    OneDnnSoftmaxConfig onednn_softmax_config = 4;
    // Configuration to be used by oneDNN convolution
    OneDnnConvolutionConfig onednn_conv_config = 5;
    // Configuration to be used by general custom call, e.g., FFI.
    CustomCallBackendConfig custom_call_config = 6;
    // Configuration for custom fusions.
    FusionBackendConfig fusion_config = 7;
  }
}
