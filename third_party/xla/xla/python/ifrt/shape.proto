/* Copyright 2024 The OpenXLA Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
==============================================================================*/

syntax = "proto3";

package xla.ifrt;

// Proto equivalent of C++ `Shape`. Currently support static shapes with all
// dimension sizes greater than or equal to 0.
message ShapeProto {
  repeated int64 dims = 1;
}

// Proto equivalent of C++ `BoundedDynamicShapeTag`.
message BoundedDynamicShapeTagProto {
  repeated bool is_dynamic_dims = 1;
}

// Proto equivalent of C++ `DynamicShape`. Currently only support bounded
// dynamic shape.
message DynamicShapeProto {
  ShapeProto shape = 1;
  oneof tag {
    BoundedDynamicShapeTagProto bounded_dynamic_shape_tag = 2;
  }
}
