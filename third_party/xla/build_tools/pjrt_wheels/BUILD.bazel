load("@cuda_cudart//:version.bzl", cuda_major_version = "VERSION")
load("@rules_python//python:packaging.bzl", "py_wheel")

# This ensures we can only build plugins for selected CUDA versions.
cuda_label = "cuda" + cuda_major_version if cuda_major_version else "null"

# Aliases and filegroups don't move files within bazel-out, so we need to use genrules to place them
# in the correct directory structure for the wheel.
genrule(
    name = "init_file_" + cuda_label,
    srcs = ["__init__.py"],
    outs = ["xla_plugins/xla_" + cuda_label + "_pjrt/__init__.py"],
    cmd = "cp $< $@",
)

genrule(
    name = "init_file_cpu",
    srcs = ["__init__.py"],
    outs = ["xla_plugins/xla_cpu_pjrt/__init__.py"],
    cmd = "cp $< $@",
)

# GPU-specific files
cc_binary(
    name = "xla_plugins/xla_" + cuda_label + "_pjrt/xla_gpu_pjrt.so",
    linkopts = [
        "-Wl,--version-script,$(location :pjrt_symbols.lds)",
        "-Wl,--no-undefined",
    ],
    linkshared = True,
    deps = [
        ":pjrt_symbols.lds",
        "//xla/pjrt/c:pjrt_c_api_gpu",
    ],
)

py_wheel(
    name = "xla_" + cuda_label + "_pjrt",
    author = "The OpenXLA Authors",
    classifiers = ["Development Status :: 1 - Planning"],
    distribution = "xla_" + cuda_label + "_pjrt",
    entry_points = {
        "xla_plugins": [
            "xla_" + cuda_label + "_pjrt = xla_plugins.xla_" + cuda_label + "_pjrt\n",
        ],
    },
    platform = "manylinux2014_x86_64",
    python_tag = "py3",
    strip_path_prefixes = ["build_tools/pjrt_wheels"],
    summary = "XLA PJRT Plugin",
    version = "0.0.0.dev0",
    deps = [
        ":xla_plugins/xla_" + cuda_label + "_pjrt/xla_gpu_pjrt.so",
        ":init_file_" + cuda_label,
    ],
)

alias(
    name = "xla_cuda_pjrt.dist",
    actual = ":xla_" + cuda_label + "_pjrt.dist",
)

# CPU-specific files
cc_binary(
    name = "xla_plugins/xla_cpu_pjrt/xla_cpu_pjrt.so",
    linkopts = [
        "-Wl,--version-script,$(location :pjrt_symbols.lds)",
        "-Wl,--no-undefined",
    ],
    linkshared = True,
    deps = [
        ":pjrt_symbols.lds",
        "//xla/pjrt/c:pjrt_c_api_cpu",
    ],
)

py_wheel(
    name = "xla_cpu_pjrt",
    author = "The OpenXLA Authors",
    classifiers = ["Development Status :: 1 - Planning"],
    distribution = "xla_cpu_pjrt",
    entry_points = {
        "xla_plugins": [
            "xla_cpu_pjrt = xla_plugins.xla_cpu_pjrt\n",
        ],
    },
    platform = "manylinux2014_x86_64",
    python_tag = "py3",
    strip_path_prefixes = ["build_tools/pjrt_wheels"],
    summary = "XLA PJRT Plugin",
    version = "0.0.0.dev0",
    deps = [
        ":init_file_cpu",
        ":xla_plugins/xla_cpu_pjrt/xla_cpu_pjrt.so",
    ],
)
