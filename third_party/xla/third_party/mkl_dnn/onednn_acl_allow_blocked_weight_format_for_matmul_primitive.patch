/* Copyright 2024 The OpenXLA Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
==============================================================================*/

diff --git a/src/cpu/aarch64/matmul/acl_matmul.hpp b/src/cpu/aarch64/matmul/acl_matmul.hpp
index 451cc78d52..ab13efb9b2 100644
--- a/src/cpu/aarch64/matmul/acl_matmul.hpp
+++ b/src/cpu/aarch64/matmul/acl_matmul.hpp
@@ -67,6 +67,8 @@ struct acl_matmul_t : public primitive_t {
 
         status_t init(engine_t *engine) {
             using smask_t = primitive_attr_t::skip_mask_t;
+            const format_kind_t weights_format_kind_received
+                    = weights_md_.format_kind;
             const bool is_fp32_ok
                     = utils::everyone_is(data_type::f32, src_md()->data_type,
                               weights_md()->data_type, dst_md()->data_type,
@@ -76,18 +78,20 @@ struct acl_matmul_t : public primitive_t {
                     = utils::everyone_is(data_type::f16, src_md()->data_type,
                               weights_md()->data_type, dst_md()->data_type)
                     && platform::has_data_type_support(data_type::f16);
+            const bool is_weights_md_format_ok
+                    = utils::one_of(weights_format_kind_received,
+                            format_kind::any, format_kind::blocked);
             bool ok = is_dense_data()
                     && utils::one_of(true, is_fp32_ok, is_fp16_ok)
-                    && !has_zero_dim_memory()
-                    && weights_md_.format_kind == format_kind::any
+                    && !has_zero_dim_memory() && is_weights_md_format_ok
                     && set_default_formats()
                     && attr()->has_default_values(
                             smask_t::oscale | smask_t::post_ops)
                     && attr_oscale_ok() && !has_runtime_dims_or_strides();
             if (!ok) return status::unimplemented;
 
-            CHECK(acl_matmul_utils::init_conf_matmul(
-                    amp_, src_md_, weights_md_, dst_md_, *desc(), *attr()));
+            CHECK(acl_matmul_utils::init_conf_matmul(amp_, src_md_, weights_md_,
+                    dst_md_, *desc(), *attr(), weights_format_kind_received));
 
             arm_compute::ActivationLayerInfo act_info;
             CHECK(post_ops.init(engine, attr_.post_ops_, dst_md_, act_info));
diff --git a/src/cpu/aarch64/matmul/acl_matmul_utils.cpp b/src/cpu/aarch64/matmul/acl_matmul_utils.cpp
index a314d96384..027f915a8a 100644
--- a/src/cpu/aarch64/matmul/acl_matmul_utils.cpp
+++ b/src/cpu/aarch64/matmul/acl_matmul_utils.cpp
@@ -27,7 +27,8 @@ namespace acl_matmul_utils {
 
 status_t init_conf_matmul(acl_matmul_conf_t &amp, memory_desc_t &src_md,
         memory_desc_t &wei_md, memory_desc_t &dst_md, const matmul_desc_t &md,
-        const primitive_attr_t &attr) {
+        const primitive_attr_t &attr,
+        format_kind_t weights_format_kind_received) {
 
     const memory_desc_wrapper src_d(&src_md);
     const memory_desc_wrapper wei_d(&wei_md);
@@ -128,9 +129,16 @@ status_t init_conf_matmul(acl_matmul_conf_t &amp, memory_desc_t &src_md,
     for (dim_t i = K_dim - 1; i >= 0; --i)
         batch_dims.push_back(i);
 
+    const memory_desc_t weights_md_received = wei_md;
     acl_utils::reorder_to_weight_format(amp.wei_tensor_info, wei_md,
             expected_weight_format, K_dim, N_dim, {}, batch_dims);
 
+    ACL_CHECK_SUPPORT((weights_format_kind_received == format_kind::blocked)
+                    && !(dnnl_memory_desc_equal(&weights_md_received, &wei_md)),
+            "specified blocked format not supported by ACL, use "
+            "format_kind_t::any to find a supported blocked format for "
+            "your platform");
+
     return status::success;
 }
 
diff --git a/src/cpu/aarch64/matmul/acl_matmul_utils.hpp b/src/cpu/aarch64/matmul/acl_matmul_utils.hpp
index 67bb2e78eb..5ba4241abc 100644
--- a/src/cpu/aarch64/matmul/acl_matmul_utils.hpp
+++ b/src/cpu/aarch64/matmul/acl_matmul_utils.hpp
@@ -52,7 +52,8 @@ namespace acl_matmul_utils {
 
 status_t init_conf_matmul(acl_matmul_conf_t &amp, memory_desc_t &src_md,
         memory_desc_t &wei_md, memory_desc_t &dst_md, const matmul_desc_t &md,
-        const primitive_attr_t &attr);
+        const primitive_attr_t &attr,
+        format_kind_t weights_format_kind_received);
 
 } // namespace acl_matmul_utils
 
-- 
2.34.1
