diff --git a/.gitignore b/.gitignore
index 4fbbc0e3b3..964b2d030d 100644
--- a/.gitignore
+++ b/.gitignore
@@ -83,8 +83,6 @@ hooks/
 localhooks/
 
 # created when packaging, don't version control this
-src/scip/githash.c
-src/scip/buildflags.c
 
 # settings
 settings/
diff --git a/src/scip/benders_xyz.c b/src/scip/benders_xyz.c
index 0d812ba6bd..ffe1badee0 100644
--- a/src/scip/benders_xyz.c
+++ b/src/scip/benders_xyz.c
@@ -47,6 +47,7 @@
 /** Benders' decomposition data */
 struct SCIP_BendersData
 {
+  void* ptr;
 };
 
 
diff --git a/src/scip/benderscut_xyz.c b/src/scip/benderscut_xyz.c
index 0f05582fe4..7fb99f648a 100644
--- a/src/scip/benderscut_xyz.c
+++ b/src/scip/benderscut_xyz.c
@@ -41,6 +41,7 @@
 /** Benders' decomposition cut data */
 struct SCIP_BenderscutData
 {
+  void* ptr;
 };
 
 
diff --git a/src/scip/branch_xyz.c b/src/scip/branch_xyz.c
index 1f13ac7460..e8ded751cf 100644
--- a/src/scip/branch_xyz.c
+++ b/src/scip/branch_xyz.c
@@ -42,6 +42,7 @@
 /** branching rule data */
 struct SCIP_BranchruleData
 {
+  void* ptr;
 };
 
 
@@ -216,7 +217,7 @@ SCIP_RETCODE SCIPincludeBranchruleXyz(
    /* use SCIPincludeBranchrule() if you want to set all callbacks explicitly and realize (by getting compiler errors) when
     * new callbacks are added in future SCIP versions
     */
-   SCIP_CALL( SCIPincludeBranchrule(scip, BRANCHRULE_NAME, BRANCHRULE_DESC, BRANCHRULE_PRIORITY, BRANCHRULE_MAXDEPTH, 
+   SCIP_CALL( SCIPincludeBranchrule(scip, BRANCHRULE_NAME, BRANCHRULE_DESC, BRANCHRULE_PRIORITY, BRANCHRULE_MAXDEPTH,
          BRANCHRULE_MAXBOUNDDIST,
          branchCopyXyz, branchFreeXyz, branchInitXyz, branchExitXyz, branchInitsolXyz, branchExitsolXyz,
          branchExeclpXyz, branchExecextXyz, branchExecpsXyz,
diff --git a/src/scip/compr_xyz.c b/src/scip/compr_xyz.c
index 2f6b29e88c..a6142d7785 100644
--- a/src/scip/compr_xyz.c
+++ b/src/scip/compr_xyz.c
@@ -41,6 +41,7 @@
 /** tree compression data */
 struct SCIP_ComprData
 {
+  void* ptr;
 };
 
 
diff --git a/src/scip/cons_xyz.c b/src/scip/cons_xyz.c
index 8141039a2e..e3f5d2b94b 100644
--- a/src/scip/cons_xyz.c
+++ b/src/scip/cons_xyz.c
@@ -69,11 +69,13 @@
 /** constraint data for xyz constraints */
 struct SCIP_ConsData
 {
+  void* ptr;
 };
 
 /** constraint handler data */
 struct SCIP_ConshdlrData
 {
+  void* ptr;
 };
 
 
diff --git a/src/scip/cutsel_xyz.c b/src/scip/cutsel_xyz.c
index c660098bb0..92f3fb9d92 100644
--- a/src/scip/cutsel_xyz.c
+++ b/src/scip/cutsel_xyz.c
@@ -40,6 +40,7 @@
 /** cut selector data */
 struct SCIP_CutselData
 {
+  void* ptr;
 };
 
 
diff --git a/src/scip/dialog_xyz.c b/src/scip/dialog_xyz.c
index 1918057017..8506d526e6 100644
--- a/src/scip/dialog_xyz.c
+++ b/src/scip/dialog_xyz.c
@@ -28,7 +28,7 @@
 
 #define DIALOG_NAME            "xyz"
 #define DIALOG_DESC            "xyz user interface dialog"
-#define DIALOG_ISSUBMENU          FALSE 
+#define DIALOG_ISSUBMENU          FALSE
 
 
 
@@ -42,6 +42,7 @@
 /** dialog data */
 struct SCIP_DialogData
 {
+  void* ptr;
 };
 
 
@@ -154,7 +155,7 @@ SCIP_RETCODE SCIPincludeDialogXyz(
    /* create, include, and release dialog */
    if( !SCIPdialogHasEntry(parentdialog, DIALOG_NAME) )
    {
-      SCIP_CALL( SCIPincludeDialog(scip, &dialog, 
+      SCIP_CALL( SCIPincludeDialog(scip, &dialog,
             dialogCopyXyz, dialogExecXyz, dialogDescXyz, dialogFreeXyz,
             DIALOG_NAME, DIALOG_DESC, DIALOG_ISSUBMENU, dialogdata) );
       SCIP_CALL( SCIPaddDialogEntry(scip, parentdialog, dialog) );
diff --git a/src/scip/disp_xyz.c b/src/scip/disp_xyz.c
index 6c6a776091..b00cf1e036 100644
--- a/src/scip/disp_xyz.c
+++ b/src/scip/disp_xyz.c
@@ -26,13 +26,13 @@
 #include "scip/disp_xyz.h"
 
 
-#define DISP_NAME               "xyz"                
+#define DISP_NAME               "xyz"
 #define DISP_DESC               "xyz display column"
-#define DISP_HEADER             "xyz" 
+#define DISP_HEADER             "xyz"
 #define DISP_WIDTH              14      /**< the width of the display column */
 #define DISP_PRIORITY           110000  /**< the priority of the display column */
 #define DISP_POSITION           30100   /**< the relative position of the display column */
-#define DISP_STRIPLINE          TRUE    /**< the default for whether the display column should be separated 
+#define DISP_STRIPLINE          TRUE    /**< the default for whether the display column should be separated
                                          *   with a line from its right neighbor */
 
 
@@ -47,6 +47,7 @@
 /** display column data */
 struct SCIP_DispData
 {
+  void* ptr;
 };
 
 
@@ -188,10 +189,10 @@ SCIP_RETCODE SCIPincludeDispXyz(
    /* TODO: (optional) create display column specific data here */
 
    /* include display column */
-   SCIP_CALL( SCIPincludeDisp(scip, DISP_NAME, DISP_DESC, DISP_HEADER, SCIP_DISPSTATUS_AUTO, 
+   SCIP_CALL( SCIPincludeDisp(scip, DISP_NAME, DISP_DESC, DISP_HEADER, SCIP_DISPSTATUS_AUTO,
          dispCopyXyz,
-         dispFreeXyz, dispInitXyz, dispExitXyz, 
-         dispInitsolXyz, dispExitsolXyz, dispOutputXyz, 
+         dispFreeXyz, dispInitXyz, dispExitXyz,
+         dispInitsolXyz, dispExitsolXyz, dispOutputXyz,
          dispdata, DISP_WIDTH, DISP_PRIORITY, DISP_POSITION, DISP_STRIPLINE) );
 
    /* add xyz display column parameters */
diff --git a/src/scip/event_xyz.c b/src/scip/event_xyz.c
index 31fd333f98..c793d69bc4 100644
--- a/src/scip/event_xyz.c
+++ b/src/scip/event_xyz.c
@@ -36,6 +36,7 @@
 /** event handler data */
 struct SCIP_EventhdlrData
 {
+  void* ptr;
 };
 
 /*
@@ -179,7 +180,7 @@ SCIP_RETCODE SCIPincludeEventHdlrXyz(
     */
    SCIP_CALL( SCIPincludeEventhdlr(scip, EVENTHDLR_NAME, EVENTHDLR_DESC,
          eventCopyXyz,
-         eventFreeXyz, eventInitXyz, eventExitXyz, 
+         eventFreeXyz, eventInitXyz, eventExitXyz,
          eventInitsolXyz, eventExitsolXyz, eventDeleteXyz, eventExecXyz,
          eventhdlrdata) );
 #else
diff --git a/src/scip/expr_xyz.c b/src/scip/expr_xyz.c
index 2eb7914e1d..4e924b03b5 100644
--- a/src/scip/expr_xyz.c
+++ b/src/scip/expr_xyz.c
@@ -38,11 +38,13 @@
 /** expression handler data */
 struct SCIP_ExprhdlrData
 {
+  void* ptr;
 };
 
 /** expression data */
 struct SCIP_ExprData
 {
+  void* ptr;
 };
 
 /*
diff --git a/src/scip/githash.c b/src/scip/githash.c
new file mode 100644
index 0000000000..2891bc72de
--- /dev/null
+++ b/src/scip/githash.c
@@ -0,0 +1 @@
+#define SCIP_GITHASH "a740f0891e"
diff --git a/src/scip/heur_xyz.c b/src/scip/heur_xyz.c
index 9f7d804f4d..e33bb83b7c 100644
--- a/src/scip/heur_xyz.c
+++ b/src/scip/heur_xyz.c
@@ -46,6 +46,7 @@
 /** primal heuristic data */
 struct SCIP_HeurData
 {
+  void* ptr;
 };
 
 
diff --git a/src/scip/nlhdlr_xyz.c b/src/scip/nlhdlr_xyz.c
index bc90f3dafe..056af7b6d3 100644
--- a/src/scip/nlhdlr_xyz.c
+++ b/src/scip/nlhdlr_xyz.c
@@ -40,11 +40,13 @@
 /** nonlinear handler data */
 struct SCIP_NlhdlrData
 {
+  void* ptr;
 };
 
 /** nonlinear handler expression data */
 struct SCIP_NlhdlrExprData
 {
+  void* ptr;
 };
 
 /*
diff --git a/src/scip/nlpi_xyz.c b/src/scip/nlpi_xyz.c
index 3509410b23..901433d2d4 100644
--- a/src/scip/nlpi_xyz.c
+++ b/src/scip/nlpi_xyz.c
@@ -43,12 +43,14 @@
 
 struct SCIP_NlpiData
 {
+  void* ptr;
 };
 
 /* TODO: fill in the necessary NLP problem instance data */
 
 struct SCIP_NlpiProblem
 {
+  void* ptr;
 };
 
 
diff --git a/src/scip/nodesel_xyz.c b/src/scip/nodesel_xyz.c
index a5b6d9d7d6..0aacc3c8d2 100644
--- a/src/scip/nodesel_xyz.c
+++ b/src/scip/nodesel_xyz.c
@@ -41,6 +41,7 @@
 /** node selector data */
 struct SCIP_NodeselData
 {
+  void* ptr;
 };
 
 
diff --git a/src/scip/presol_xyz.c b/src/scip/presol_xyz.c
index 38ba9df72e..04fe8605f5 100644
--- a/src/scip/presol_xyz.c
+++ b/src/scip/presol_xyz.c
@@ -42,6 +42,7 @@
 /** presolver data */
 struct SCIP_PresolData
 {
+  void* ptr;
 };
 
 
diff --git a/src/scip/pricer_xyz.c b/src/scip/pricer_xyz.c
index 16c968b951..5090a91e35 100644
--- a/src/scip/pricer_xyz.c
+++ b/src/scip/pricer_xyz.c
@@ -43,6 +43,7 @@
 /** variable pricer data */
 struct SCIP_PricerData
 {
+  void* ptr;
 };
 
 
@@ -204,7 +205,7 @@ SCIP_RETCODE SCIPincludePricerXyz(
     * new callbacks are added in future SCIP versions
     */
    SCIP_CALL( SCIPincludePricer(scip, PRICER_NAME, PRICER_DESC, PRICER_PRIORITY, PRICER_DELAY,
-         pricerCopyXyz, pricerFreeXyz, pricerInitXyz, pricerExitXyz, 
+         pricerCopyXyz, pricerFreeXyz, pricerInitXyz, pricerExitXyz,
          pricerInitsolXyz, pricerExitsolXyz, pricerRedcostXyz, pricerFarkasXyz,
          pricerdata) );
 #else
diff --git a/src/scip/prop_xyz.c b/src/scip/prop_xyz.c
index 431d8e909b..975564f12b 100644
--- a/src/scip/prop_xyz.c
+++ b/src/scip/prop_xyz.c
@@ -28,7 +28,7 @@
 /* fundamental propagator properties */
 #define PROP_NAME              "xyz"
 #define PROP_DESC              "propagator template"
-#define PROP_PRIORITY                 0 /**< propagator priority */ 
+#define PROP_PRIORITY                 0 /**< propagator priority */
 #define PROP_FREQ                    10 /**< propagator frequency */
 #define PROP_DELAY                FALSE /**< should propagation method be delayed, if other propagators found reductions? */
 #define PROP_TIMING             SCIP_PROPTIMING_BEFORELP/**< propagation timing mask */
@@ -50,6 +50,7 @@
 /** propagator data */
 struct SCIP_PropData
 {
+  void* ptr;
 };
 
 
diff --git a/src/scip/reader_xyz.c b/src/scip/reader_xyz.c
index 08e5a6ff7b..c8fdd9d4f5 100644
--- a/src/scip/reader_xyz.c
+++ b/src/scip/reader_xyz.c
@@ -40,6 +40,7 @@
 /** data for xyz reader */
 struct SCIP_ReaderData
 {
+  void* ptr;
 };
 
 
diff --git a/src/scip/relax_xyz.c b/src/scip/relax_xyz.c
index 4d4acc80b3..74dfbda91f 100644
--- a/src/scip/relax_xyz.c
+++ b/src/scip/relax_xyz.c
@@ -43,6 +43,7 @@
 /** relaxator data */
 struct SCIP_RelaxData
 {
+  void* ptr;
 };
 
 
diff --git a/src/scip/scipbuildflags.c b/src/scip/scipbuildflags.c
index b54b9112cb..dc8e62b5e0 100644
--- a/src/scip/scipbuildflags.c
+++ b/src/scip/scipbuildflags.c
@@ -21,10 +21,9 @@
 
 /*---+----1----+----2----+----3----+----4----+----5----+----6----+----7----+----8----+----9----+----0----+----1----+----2*/
 
+#define SCIP_BUILDFLAGS " ARCH=x86_64\n COMP=gnu\n DEBUGSOL=false\n EXPRINT=none\n GAMS=false\n SYM=bliss\n GMP=false\n IPOPT=false\n IPOPTOPT=opt\n WORHP=false\n WORHPOPT=opt\n LPS=spx2\n LPSCHECK=false\n LPSOPT=opt\n NOBLKBUFMEM=false\n NOBLKMEM=false\n NOBUFMEM=false\n OPT=opt\n OSTYPE=linux\n PARASCIP=true\n READLINE=false\n SANITIZE=\n SHARED=false\n USRARFLAGS=\n USRCFLAGS=-fPIC\n USRCXXFLAGS=-fPIC\n USRDFLAGS=\n USRFLAGS=\n USRLDFLAGS=\n USROFLAGS=\n VERSION=7.0.1\n ZIMPL=false\n ZIMPLOPT=opt\n ZLIB=true"
+
 #include "scip/scipbuildflags.h"
-#ifdef NO_CONFIG_HEADER
-#include "buildflags.c"
-#endif
 
 /** returns the flags that were used to build SCIP */
 const char* SCIPgetBuildFlags(
diff --git a/src/scip/sepa_xyz.c b/src/scip/sepa_xyz.c
index 40d3c1c5f7..f68658951d 100644
--- a/src/scip/sepa_xyz.c
+++ b/src/scip/sepa_xyz.c
@@ -44,6 +44,7 @@
 /** separator data */
 struct SCIP_SepaData
 {
+  void* ptr;
 };
 
 
diff --git a/src/scip/table_xyz.c b/src/scip/table_xyz.c
index 2c93a43235..4f1fd28de4 100644
--- a/src/scip/table_xyz.c
+++ b/src/scip/table_xyz.c
@@ -43,6 +43,7 @@
 /** statistics table data */
 struct SCIP_TableData
 {
+  void* ptr;
 };
 
 
diff --git a/src/symmetry/compute_symmetry_bliss.cpp b/src/symmetry/compute_symmetry_bliss.cpp
index 484627c4b9..27c2895165 100644
--- a/src/symmetry/compute_symmetry_bliss.cpp
+++ b/src/symmetry/compute_symmetry_bliss.cpp
@@ -25,8 +25,8 @@
 #include "compute_symmetry.h"
 
 /* include bliss graph */
-#include <bliss/defs.hh>
-#include <bliss/graph.hh>
+#include <bliss-0.73/defs.hh>
+#include <bliss-0.73/graph.hh>
 
 #include <string.h>
 #include <vector>
 