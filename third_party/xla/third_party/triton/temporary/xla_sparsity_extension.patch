# Tracked in b/377656276, b/377699102
# I have moved this from internal to public folder so that it can be removed
# from xla_extensions and only applied once in the future. Remove this patch in
# the next integrate.
diff --git a/third_party/nvidia/include/Dialect/NVGPU/IR/NVGPUOps.td b/third_party/nvidia/include/Dialect/NVGPU/IR/NVGPUOps.td
index 7affd8840..52aa2c131 100644
--- a/third_party/nvidia/include/Dialect/NVGPU/IR/NVGPUOps.td
+++ b/third_party/nvidia/include/Dialect/NVGPU/IR/NVGPUOps.td
@@ -87,6 +87,15 @@ def NVGPU_WGMMAOp : NVGPU_Op<"wgmma", []> {
   let assemblyFormat = "$opA `,` $opB `,` $useC (`,` $opC^)? attr-dict `:` functional-type(operands, $res)";
 }
 
+def NVGPU_SparseWGMMAOp : NVGPU_Op<"wgmma_sp", []> {
+  let arguments = (ins WGMMA_OperandType:$opA, I32:$metaA, WGMMA_OperandType:$opB, LLVM_AnyStruct:$opC,
+                   I32Attr:$m, I32Attr:$n, I32Attr:$k,
+                   WGMMA_EltTypeAttr:$eltTypeC, WGMMA_EltTypeAttr:$eltTypeA, WGMMA_EltTypeAttr:$eltTypeB,
+                   WGMMA_LayoutAttr:$layoutA, WGMMA_LayoutAttr:$layoutB);
+  let results = (outs LLVM_AnyStruct:$res);
+  let assemblyFormat = "$opA `meta` $metaA `,` $opB `,` $opC attr-dict `:` functional-type(operands, $res)";
+}
+
 def NVGPU_FenceAsyncSharedOp : NVGPU_Op<"fence_async_shared", []> {
   let arguments = (ins BoolAttr:$bCluster);
   let assemblyFormat = "attr-dict";

--- a/lib/Dialect/TritonNvidiaGPU/Transforms/FenceInsertion.cpp	2024-12-05 23:53:31.000000000 -0800
+++ b/lib/Dialect/TritonNvidiaGPU/Transforms/FenceInsertion.cpp	2024-12-19 07:03:31.000000000 -0800
@@ -44,7 +44,8 @@
       return;
     ModuleOp mod = getOperation();
     mod.walk([&](Operation *op) {
-      if (!op->hasTrait<OpTrait::DotLike>())
+      if (!isa<ttng::WarpGroupDotOp>(op) &&
+          op->getName().getStringRef() != "triton_xla.sparse_dot")
         return WalkResult::advance();
       OpBuilder builder(op);
       auto a = op->getOperand(0);
