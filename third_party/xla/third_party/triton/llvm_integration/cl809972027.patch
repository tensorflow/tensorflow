
--- a/third_party/amd/lib/TritonAMDGPUToLLVM/TritonGPUToLLVM.cpp	2025-07-31 00:13:23.000000000 -0700
+++ b/third_party/amd/lib/TritonAMDGPUToLLVM/TritonGPUToLLVM.cpp	2025-09-22 05:43:47.000000000 -0700
@@ -257,7 +257,7 @@
         loc, arrayTy, /*isConstant=*/false, LLVM::Linkage::External,
         "global_smem", /*value=*/Attribute(), /*alignment=*/16,
         // Add ROCm support.
-        static_cast<unsigned>(NVVM::NVVMMemorySpace::kSharedMemorySpace));
+        static_cast<unsigned>(NVVM::NVVMMemorySpace::Shared));
   }
 };
 

--- a/third_party/amd/lib/TritonAMDGPUTransforms/Utility.cpp	2025-04-25 05:19:43.000000000 -0700
+++ b/third_party/amd/lib/TritonAMDGPUTransforms/Utility.cpp	2025-09-22 05:43:47.000000000 -0700
@@ -24,9 +24,9 @@
           deduceMinCountInBlock(ifOp.getElseRegion().front(), countFunc);
       count += std::min(minThen, minElse);
     } else if (auto forOp = llvm::dyn_cast<scf::ForOp>(op)) {
-      auto tripCount = constantTripCount(forOp.getLowerBound(),
-                                         forOp.getUpperBound(), forOp.getStep())
-                           .value_or(0);
+      int64_t tripCount = forOp.getStaticTripCount()
+                              .value_or(llvm::APInt(64, 0))
+                              .getZExtValue();
       if (tripCount > 0) {
         count += tripCount * deduceMinCountInBlock(*forOp.getBody(), countFunc);
       }

--- a/third_party/nvidia/lib/TritonNVIDIAGPUToLLVM/TritonGPUToLLVM.cpp	2025-08-22 04:02:56.000000000 -0700
+++ b/third_party/nvidia/lib/TritonNVIDIAGPUToLLVM/TritonGPUToLLVM.cpp	2025-09-22 05:43:47.000000000 -0700
@@ -223,7 +223,7 @@
         loc, arrayTy, /*isConstant=*/false, LLVM::Linkage::External,
         "global_smem", /*value=*/Attribute(), /*alignment=*/16,
         // Add ROCm support.
-        static_cast<unsigned>(NVVM::NVVMMemorySpace::kSharedMemorySpace));
+        static_cast<unsigned>(NVVM::NVVMMemorySpace::Shared));
   }
 };
 
