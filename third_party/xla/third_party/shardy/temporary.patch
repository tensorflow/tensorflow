diff --git a/third_party/llvm/generated.patch b/third_party/llvm/generated.patch
index 509398d..7731e08 100644
--- a/third_party/llvm/generated.patch
+++ b/third_party/llvm/generated.patch
@@ -1 +1,45 @@
 Auto generated patch. Do not edit or delete it, even if empty.
+diff -ruN --strip-trailing-cr a/llvm/unittests/Analysis/FunctionPropertiesAnalysisTest.cpp b/llvm/unittests/Analysis/FunctionPropertiesAnalysisTest.cpp
+--- a/llvm/unittests/Analysis/FunctionPropertiesAnalysisTest.cpp
++++ b/llvm/unittests/Analysis/FunctionPropertiesAnalysisTest.cpp
+@@ -46,8 +46,8 @@
+     MAM.registerPass([VocabVector = std::move(VocabVector)]() mutable {
+       return IR2VecVocabAnalysis(std::move(VocabVector));
+     });
+-    IR2VecVocab =
+-        new ir2vec::Vocabulary(ir2vec::Vocabulary::createDummyVocabForTest(1));
++    IR2VecVocab = std::make_unique<ir2vec::Vocabulary>(
++        ir2vec::Vocabulary::createDummyVocabForTest(1));
+     MAM.registerPass([&] { return PassInstrumentationAnalysis(); });
+     FAM.registerPass([&] { return ModuleAnalysisManagerFunctionProxy(MAM); });
+     FAM.registerPass([&] { return DominatorTreeAnalysis(); });
+@@ -69,7 +69,7 @@
+   std::unique_ptr<LoopInfo> LI;
+   FunctionAnalysisManager FAM;
+   ModuleAnalysisManager MAM;
+-  ir2vec::Vocabulary *IR2VecVocab;
++  std::unique_ptr<ir2vec::Vocabulary> IR2VecVocab;
+ 
+   void TearDown() override {
+     // Restore original IR2Vec weights
+diff -ruN --strip-trailing-cr a/llvm/unittests/Analysis/IR2VecTest.cpp b/llvm/unittests/Analysis/IR2VecTest.cpp
+--- a/llvm/unittests/Analysis/IR2VecTest.cpp
++++ b/llvm/unittests/Analysis/IR2VecTest.cpp
+@@ -295,7 +295,7 @@
+ // Fixture for IR2Vec tests requiring IR setup.
+ class IR2VecTestFixture : public ::testing::Test {
+ protected:
+-  Vocabulary *V;
++  std::unique_ptr<Vocabulary> V;
+   LLVMContext Ctx;
+   std::unique_ptr<Module> M;
+   Function *F = nullptr;
+@@ -304,7 +304,7 @@
+   Instruction *RetInst = nullptr;
+ 
+   void SetUp() override {
+-    V = new Vocabulary(Vocabulary::createDummyVocabForTest(2));
++    V = std::make_unique<Vocabulary>(Vocabulary::createDummyVocabForTest(2));
+ 
+     // Setup IR
+     M = std::make_unique<Module>("TestM", Ctx);
diff --git a/third_party/llvm/workspace.bzl b/third_party/llvm/workspace.bzl
index 996e2ec..c407321 100644
--- a/third_party/llvm/workspace.bzl
+++ b/third_party/llvm/workspace.bzl
@@ -4,8 +4,8 @@ load("//third_party:repo.bzl", "tf_http_archive")
 
 def repo(name):
     """Imports LLVM."""
-    LLVM_COMMIT = "ca84f2aa3be6e46a4dccb1bec56b93f2bb3d8ef0"
-    LLVM_SHA256 = "5cea44df2e0c3dcb6119c2ca5d7a900001e93ec43369ed1b58eb4ed4d4c9f9f0"
+    LLVM_COMMIT = "fd9a1dcc01766c71932898e9643ce28bf2801bad"
+    LLVM_SHA256 = "85b7a4524078549ef1b3271569241a14deec1b7f4c42048877601166f3d1fee9"
 
     tf_http_archive(
         name = name,
