diff --git a/shardy/tools/BUILD b/shardy/tools/BUILD
index a51ddd0..5cfc1ec 100644
--- a/shardy/tools/BUILD
+++ b/shardy/tools/BUILD
@@ -51,5 +51,6 @@ cc_binary(
         "@llvm-project//mlir:IR",
         "@llvm-project//mlir:MlirOptLib",
         "@llvm-project//mlir:QuantOps",
+        "@llvm-project//mlir:RegisterAllPasses",
     ],
 )
diff --git a/third_party/llvm/generated.patch b/third_party/llvm/generated.patch
index d7acb4c..4fd42f9 100644
--- a/third_party/llvm/generated.patch
+++ b/third_party/llvm/generated.patch
@@ -741,3 +741,390 @@ diff -ruN --strip-trailing-cr a/mlir/test/IR/top-level.mlir b/mlir/test/IR/top-l
  
 -// expected-error@-15 {{source must contain a single top-level operation, found: 0}}
 +// expected-error@-2 {{source must contain a single top-level operation, found: 0}}
+diff -ruN --strip-trailing-cr a/utils/bazel/llvm-project-overlay/mlir/BUILD.bazel b/utils/bazel/llvm-project-overlay/mlir/BUILD.bazel
+--- a/utils/bazel/llvm-project-overlay/mlir/BUILD.bazel
++++ b/utils/bazel/llvm-project-overlay/mlir/BUILD.bazel
+@@ -1003,6 +1003,9 @@
+         ":BuiltinToLLVMIRTranslation",
+         ":IR",
+         ":LLVMToLLVMIRTranslation",
++        ":RegisterAllDialects",
++        ":RegisterAllExtensions",
++        ":RegisterAllPasses",
+     ],
+ )
+ 
+@@ -4594,57 +4597,6 @@
+ cc_library(
+     name = "AllExtensions",
+     hdrs = ["include/mlir/InitAllExtensions.h"],
+-    deps = [
+-        ":AMXTransforms",
+-        ":AffineTransformOps",
+-        ":ArithToEmitC",
+-        ":ArithToLLVM",
+-        ":ArmNeonTransformOps",
+-        ":ArmSVEVectorTransformOps",
+-        ":BufferizationTransformOps",
+-        ":BuiltinToLLVMIRTranslation",
+-        ":ComplexToLLVM",
+-        ":ControlFlowToLLVM",
+-        ":DLTITransformOps",
+-        ":FuncExtensions",
+-        ":FuncToEmitC",
+-        ":FuncToLLVM",
+-        ":FuncTransformOps",
+-        ":GPUToGPURuntimeTransforms",
+-        ":GPUToLLVMIRTranslation",
+-        ":GPUToNVVMTransforms",
+-        ":GPUTransformOps",
+-        ":IndexToLLVM",
+-        ":LLVMToLLVMIRTranslation",
+-        ":LinalgTransformOps",
+-        ":MPIToLLVM",
+-        ":MathToLLVM",
+-        ":MemRefToEmitC",
+-        ":MemRefToLLVM",
+-        ":MemRefTransformOps",
+-        ":NVGPUTransformOps",
+-        ":NVVMTarget",
+-        ":NVVMToLLVM",
+-        ":OpenMPToLLVM",
+-        ":ROCDLTarget",
+-        ":ROCDLToLLVMIRTranslation",
+-        ":SCFToEmitC",
+-        ":SCFTransformOps",
+-        ":ShardDialect",
+-        ":SparseTensorTransformOps",
+-        ":TensorExtensions",
+-        ":TensorTransformOps",
+-        ":TransformDebugExtension",
+-        ":TransformIRDLExtension",
+-        ":TransformLoopExtension",
+-        ":TransformPDLExtension",
+-        ":TransformTuneExtension",
+-        ":UBToLLVM",
+-        ":VCIXToLLVMIRTranslation",
+-        ":VectorToLLVM",
+-        ":VectorTransformOps",
+-        ":XeVMToLLVM",
+-    ],
+ )
+ 
+ # TODO(zinenko): remove this after updating users.
+@@ -8934,130 +8886,69 @@
+         "include/mlir/InitAllDialects.h",
+         "include/mlir/InitAllPasses.h",
+     ],
++)
++
++cc_library(
++    name = "RegisterAllDialects",
++    srcs = ["lib/RegisterAllDialects.cpp"],
+     deps = [
+         ":AMDGPUDialect",
+-        ":AMDGPUToROCDL",
+-        ":AMDGPUTransforms",
+         ":AMXDialect",
+-        ":AMXTransforms",
+         ":AffineDialect",
+-        ":AffinePassIncGen",
+-        ":AffineToStandard",
+-        ":AffineTransformOps",
+-        ":AffineTransforms",
++        ":AllPassesAndDialects",
+         ":ArithDialect",
+-        ":ArithToAMDGPU",
+-        ":ArithToLLVM",
+-        ":ArithToSPIRV",
+         ":ArithTransforms",
+         ":ArithValueBoundsOpInterfaceImpl",
+         ":ArmNeonDialect",
+         ":ArmSMEDialect",
+         ":ArmSMETransforms",
+         ":ArmSVEDialect",
+-        ":ArmSVETransforms",
+         ":AsyncDialect",
+-        ":AsyncPassIncGen",
+-        ":AsyncToLLVM",
+-        ":AsyncTransforms",
+         ":BufferizationDialect",
+-        ":BufferizationPipelines",
+-        ":BufferizationTransformOps",
+         ":BufferizationTransforms",
+         ":CastInterfaces",
+         ":ComplexDialect",
+-        ":ComplexToLLVM",
+-        ":ComplexToLibm",
+-        ":ComplexToSPIRV",
+         ":ControlFlowDialect",
+         ":ControlFlowTransforms",
+-        ":ConversionPasses",
+-        ":ConvertToEmitC",
+-        ":ConvertToLLVM",
+         ":DLTIDialect",
+         ":EmitCDialect",
+-        ":EmitCTransforms",
+         ":FuncDialect",
+-        ":FuncToLLVM",
+-        ":FuncToSPIRV",
+-        ":FuncTransformOps",
+-        ":FuncTransforms",
+-        ":FuncTransformsPassIncGen",
+         ":GPUDialect",
+-        ":GPUPassIncGen",
+-        ":GPUPipelines",
+-        ":GPUToGPURuntimeTransforms",
+-        ":GPUToNVVMTransforms",
+-        ":GPUToROCDLTransforms",
+-        ":GPUToSPIRV",
+-        ":GPUTransformOps",
+         ":GPUTransforms",
+         ":IR",
+         ":IRDLDialect",
+         ":IndexDialect",
+         ":LLVMDialect",
+         ":LLVMIRTransforms",
+-        ":LLVMPassIncGen",
+         ":LinalgDialect",
+-        ":LinalgPassIncGen",
+-        ":LinalgToStandard",
+-        ":LinalgTransformOps",
+         ":LinalgTransforms",
+         ":MLProgramDialect",
+         ":MLProgramTransforms",
+         ":MPIDialect",
+         ":MathDialect",
+-        ":MathToFuncs",
+-        ":MathToLLVM",
+-        ":MathToLibm",
+-        ":MathToSPIRV",
+-        ":MathTransforms",
+         ":MemRefDialect",
+-        ":MemRefToLLVM",
+-        ":MemRefToSPIRV",
+-        ":MemRefTransformOps",
+         ":MemRefTransforms",
+         ":NVGPUDialect",
+-        ":NVGPUPassIncGen",
+-        ":NVGPUToNVVM",
+-        ":NVGPUTransformOps",
+-        ":NVGPUTransforms",
+         ":NVVMDialect",
+         ":NVVMTarget",
+         ":OpenACCDialect",
+-        ":OpenACCTransforms",
+         ":OpenMPDialect",
+-        ":OpenMPToLLVM",
+         ":PDLDialect",
+         ":PDLInterpDialect",
+-        ":PDLToPDLInterp",
+         ":PtrDialect",
+         ":QuantOps",
+-        ":QuantTransforms",
+         ":ROCDLDialect",
+         ":ROCDLTarget",
+-        ":ReconcileUnrealizedCasts",
+         ":SCFDialect",
+-        ":SCFPassIncGen",
+-        ":SCFToControlFlow",
+-        ":SCFToGPU",
+         ":SCFTransformOps",
+         ":SCFTransforms",
+         ":SMTDialect",
+         ":SPIRVDialect",
+-        ":SPIRVPassIncGen",
+         ":SPIRVTarget",
+-        ":SPIRVToLLVM",
+-        ":SPIRVTransforms",
+         ":ShapeDialect",
+-        ":ShapeToStandard",
+         ":ShapeTransforms",
+-        ":ShapeTransformsPassIncGen",
+         ":ShardDialect",
+-        ":ShardTransforms",
+         ":SparseTensorDialect",
+-        ":SparseTensorPipelines",
+-        ":SparseTensorTransformOps",
+         ":SparseTensorTransforms",
+         ":TensorDialect",
+         ":TensorInferTypeOpInterfaceImpl",
+@@ -9065,29 +8956,112 @@
+         ":TensorTransformOps",
+         ":TensorTransforms",
+         ":TosaDialect",
+-        ":TosaToLinalg",
+-        ":TransformDebugExtension",
+         ":TransformDialect",
+         ":TransformDialectTransforms",
+-        ":TransformLoopExtension",
+         ":TransformPDLExtension",
+-        ":Transforms",
+-        ":TransformsPassIncGen",
+         ":UBDialect",
+         ":VectorDialect",
+-        ":VectorToLLVM",
+-        ":VectorToSCF",
+-        ":VectorToSPIRV",
+-        ":VectorTransformOps",
+         ":VectorTransforms",
+         ":X86VectorDialect",
+-        ":X86VectorTransforms",
+         ":XeGPUDialect",
+-        ":XeGPUTransforms",
+         ":XeVMDialect",
+     ],
+ )
+ 
++cc_library(
++    name = "RegisterAllPasses",
++    srcs = ["lib/RegisterAllPasses.cpp"],
++    deps = [
++        ":AMDGPUTransforms",
++        ":AffineTransforms",
++        ":AllPassesAndDialects",
++        ":ArithTransforms",
++        ":ArmSMETransforms",
++        ":ArmSVETransforms",
++        ":AsyncTransforms",
++        ":BufferizationPipelines",
++        ":BufferizationTransforms",
++        ":ConversionPasses",
++        ":EmitCTransforms",
++        ":FuncTransforms",
++        ":GPUPipelines",
++        ":GPUTransforms",
++        ":LLVMIRTransforms",
++        ":LinalgTransforms",
++        ":MLProgramTransforms",
++        ":MathTransforms",
++        ":MemRefTransforms",
++        ":NVGPUTransforms",
++        ":OpenACCTransforms",
++        ":QuantTransforms",
++        ":SCFTransforms",
++        ":SPIRVTransforms",
++        ":ShapeTransforms",
++        ":ShardTransforms",
++        ":SparseTensorPipelines",
++        ":SparseTensorTransforms",
++        ":TensorTransforms",
++        ":TosaDialect",
++        ":TransformDialectTransforms",
++        ":Transforms",
++        ":VectorTransforms",
++        ":XeGPUTransforms",
++    ],
++)
++
++cc_library(
++    name = "RegisterAllExtensions",
++    srcs = ["lib/RegisterAllExtensions.cpp"],
++    deps = [
++        ":AMXTransforms",
++        ":AffineTransformOps",
++        ":AllExtensions",
++        ":ArithToEmitC",
++        ":ArithToLLVM",
++        ":ArmNeonTransformOps",
++        ":ArmSVEVectorTransformOps",
++        ":BufferizationTransformOps",
++        ":BuiltinToLLVMIRTranslation",
++        ":ComplexToLLVM",
++        ":ControlFlowToLLVM",
++        ":DLTITransformOps",
++        ":FuncExtensions",
++        ":FuncToEmitC",
++        ":FuncToLLVM",
++        ":FuncTransformOps",
++        ":GPUToGPURuntimeTransforms",
++        ":GPUToLLVMIRTranslation",
++        ":GPUToNVVMTransforms",
++        ":GPUTransformOps",
++        ":IndexToLLVM",
++        ":LLVMToLLVMIRTranslation",
++        ":LinalgTransformOps",
++        ":MPIToLLVM",
++        ":MathToLLVM",
++        ":MemRefToEmitC",
++        ":MemRefToLLVM",
++        ":MemRefTransformOps",
++        ":NVGPUTransformOps",
++        ":NVVMToLLVM",
++        ":OpenMPToLLVM",
++        ":ROCDLToLLVMIRTranslation",
++        ":SCFToEmitC",
++        ":SCFTransformOps",
++        ":SparseTensorTransformOps",
++        ":TensorExtensions",
++        ":TensorTransformOps",
++        ":TransformDebugExtension",
++        ":TransformIRDLExtension",
++        ":TransformLoopExtension",
++        ":TransformPDLExtension",
++        ":TransformTuneExtension",
++        ":UBToLLVM",
++        ":VectorToLLVM",
++        ":VectorTransformOps",
++        ":XeVMToLLVM",
++    ],
++)
++
+ cc_binary(
+     name = "mlir-lsp-server",
+     srcs = ["tools/mlir-lsp-server/mlir-lsp-server.cpp"],
+@@ -9099,6 +9073,8 @@
+         ":IR",
+         ":MlirLspServerLib",
+         ":MlirLspServerSupportLib",
++        ":RegisterAllDialects",
++        ":RegisterAllExtensions",
+         "//mlir/test:TestAffine",
+         "//mlir/test:TestAnalysis",
+         "//mlir/test:TestArith",
+@@ -9153,6 +9129,9 @@
+         ":OpenMPDialect",
+         ":Pass",
+         ":QuantOps",
++        ":RegisterAllDialects",
++        ":RegisterAllExtensions",
++        ":RegisterAllPasses",
+         ":SCFToGPU",
+         ":Support",
+         ":Transforms",
+@@ -9216,6 +9195,7 @@
+         ":ParseUtilities",
+         ":Parser",
+         ":Pass",
++        ":RegisterAllDialects",
+         ":Support",
+         ":TransformUtils",
+         ":Transforms",
+@@ -13228,6 +13208,8 @@
+         ":AllPassesAndDialects",
+         ":IR",
+         ":MlirReduceLib",
++        ":RegisterAllDialects",
++        ":RegisterAllPasses",
+         "//mlir/test:TestDialect",
+     ],
+ )
+@@ -13286,6 +13268,7 @@
+         ":IR",
+         ":MlirQueryLib",
+         ":MlirQueryUtils",
++        ":RegisterAllDialects",
+         "//mlir/test:TestDialect",
+     ],
+ )
+diff -ruN --strip-trailing-cr a/utils/bazel/llvm-project-overlay/mlir/unittests/BUILD.bazel b/utils/bazel/llvm-project-overlay/mlir/unittests/BUILD.bazel
+--- a/utils/bazel/llvm-project-overlay/mlir/unittests/BUILD.bazel
++++ b/utils/bazel/llvm-project-overlay/mlir/unittests/BUILD.bazel
+@@ -419,6 +419,7 @@
+         "//mlir:Parser",
+         "//mlir:Pass",
+         "//mlir:ReconcileUnrealizedCasts",
++        "//mlir:RegisterAllDialects",
+         "//mlir:ToLLVMIRTranslation",
+         "//mlir:VectorToLLVM",
+         "//mlir:VectorToSCF",
diff --git a/third_party/llvm/workspace.bzl b/third_party/llvm/workspace.bzl
index 6bf7b5d..9dc087c 100644
--- a/third_party/llvm/workspace.bzl
+++ b/third_party/llvm/workspace.bzl
@@ -4,8 +4,8 @@ load("//third_party:repo.bzl", "tf_http_archive")
 
 def repo(name):
     """Imports LLVM."""
-    LLVM_COMMIT = "8e7b02fc0cd5f63a14f4117866f860b7f174baf3"
-    LLVM_SHA256 = "465cf31bab17d09f9e119ea7a295ddc027ff2d142ee2aa971e8187c154bcdf44"
+    LLVM_COMMIT = "e68a20e0b7623738d6af736d3aa02625cba6126a"
+    LLVM_SHA256 = "2e49b6851d6625209d3db8e8d184142fc4fe549790e98292f9c8c1227d959946"
 
     tf_http_archive(
         name = name,
