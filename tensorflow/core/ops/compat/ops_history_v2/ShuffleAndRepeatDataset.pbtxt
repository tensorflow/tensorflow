op {
  name: "ShuffleAndRepeatDataset"
  input_arg {
    name: "input_dataset"
    type: DT_VARIANT
  }
  input_arg {
    name: "buffer_size"
    type: DT_INT64
  }
  input_arg {
    name: "seed"
    type: DT_INT64
  }
  input_arg {
    name: "seed2"
    type: DT_INT64
  }
  input_arg {
    name: "count"
    type: DT_INT64
  }
  output_arg {
    name: "handle"
    type: DT_VARIANT
  }
  attr {
    name: "output_types"
    type: "list(type)"
    has_minimum: true
    minimum: 1
  }
  attr {
    name: "output_shapes"
    type: "list(shape)"
    has_minimum: true
    minimum: 1
  }
}
op {
  name: "ShuffleAndRepeatDataset"
  input_arg {
    name: "input_dataset"
    type: DT_VARIANT
  }
  input_arg {
    name: "buffer_size"
    type: DT_INT64
  }
  input_arg {
    name: "seed"
    type: DT_INT64
  }
  input_arg {
    name: "seed2"
    type: DT_INT64
  }
  input_arg {
    name: "count"
    type: DT_INT64
  }
  output_arg {
    name: "handle"
    type: DT_VARIANT
  }
  attr {
    name: "output_types"
    type: "list(type)"
    has_minimum: true
    minimum: 1
  }
  attr {
    name: "output_shapes"
    type: "list(shape)"
    has_minimum: true
    minimum: 1
  }
  attr {
    name: "reshuffle_each_iteration"
    type: "bool"
    default_value {
      b: true
    }
  }
}
op {
  name: "ShuffleAndRepeatDataset"
  input_arg {
    name: "input_dataset"
    type: DT_VARIANT
  }
  input_arg {
    name: "buffer_size"
    type: DT_INT64
  }
  input_arg {
    name: "seed"
    type: DT_INT64
  }
  input_arg {
    name: "seed2"
    type: DT_INT64
  }
  input_arg {
    name: "count"
    type: DT_INT64
  }
  output_arg {
    name: "handle"
    type: DT_VARIANT
  }
  attr {
    name: "output_types"
    type: "list(type)"
    has_minimum: true
    minimum: 1
  }
  attr {
    name: "output_shapes"
    type: "list(shape)"
    has_minimum: true
    minimum: 1
  }
  attr {
    name: "reshuffle_each_iteration"
    type: "bool"
    default_value {
      b: true
    }
  }
  attr {
    name: "metadata"
    type: "string"
    default_value {
      s: ""
    }
  }
}
op {
  name: "ShuffleAndRepeatDataset"
  input_arg {
    name: "input_dataset"
    type: DT_VARIANT
  }
  input_arg {
    name: "buffer_size"
    type: DT_INT64
  }
  input_arg {
    name: "seed"
    type: DT_INT64
  }
  input_arg {
    name: "seed2"
    type: DT_INT64
  }
  input_arg {
    name: "count"
    type: DT_INT64
  }
  output_arg {
    name: "handle"
    type: DT_VARIANT
    experimental_full_type {
      type_id: TFT_DATASET
      args {
        type_id: TFT_VAR
        s: "output_types"
      }
    }
  }
  attr {
    name: "output_types"
    type: "list(type)"
    has_minimum: true
    minimum: 1
  }
  attr {
    name: "output_shapes"
    type: "list(shape)"
    has_minimum: true
    minimum: 1
  }
  attr {
    name: "reshuffle_each_iteration"
    type: "bool"
    default_value {
      b: true
    }
  }
  attr {
    name: "metadata"
    type: "string"
    default_value {
      s: ""
    }
  }
}
op {
  name: "ShuffleAndRepeatDataset"
  input_arg {
    name: "input_dataset"
    type: DT_VARIANT
  }
  input_arg {
    name: "buffer_size"
    type: DT_INT64
  }
  input_arg {
    name: "seed"
    type: DT_INT64
  }
  input_arg {
    name: "seed2"
    type: DT_INT64
  }
  input_arg {
    name: "count"
    type: DT_INT64
  }
  output_arg {
    name: "handle"
    type: DT_VARIANT
    experimental_full_type {
      type_id: TFT_DATASET
      args {
        type_id: TFT_FOR_EACH
        args {
          type_id: TFT_PRODUCT
        }
        args {
          type_id: TFT_TENSOR
          args {
            type_id: TFT_VAR
            s: "output_types"
          }
        }
        args {
          type_id: TFT_VAR
          s: "output_types"
        }
      }
    }
  }
  attr {
    name: "output_types"
    type: "list(type)"
    has_minimum: true
    minimum: 1
  }
  attr {
    name: "output_shapes"
    type: "list(shape)"
    has_minimum: true
    minimum: 1
  }
  attr {
    name: "reshuffle_each_iteration"
    type: "bool"
    default_value {
      b: true
    }
  }
  attr {
    name: "metadata"
    type: "string"
    default_value {
      s: ""
    }
  }
}
