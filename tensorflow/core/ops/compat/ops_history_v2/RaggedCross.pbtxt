op {
  name: "RaggedCross"
  input_arg {
    name: "ragged_values"
    type_list_attr: "ragged_values_types"
  }
  input_arg {
    name: "ragged_row_splits"
    type_list_attr: "ragged_splits_types"
  }
  input_arg {
    name: "sparse_indices"
    type: DT_INT64
    number_attr: "Nsparse"
  }
  input_arg {
    name: "sparse_values"
    type_list_attr: "sparse_values_types"
  }
  input_arg {
    name: "sparse_shape"
    type: DT_INT64
    number_attr: "Nsparse"
  }
  input_arg {
    name: "dense_inputs"
    type_list_attr: "dense_types"
  }
  output_arg {
    name: "output_values"
    type_attr: "out_values_type"
  }
  output_arg {
    name: "output_row_splits"
    type_attr: "out_row_splits_type"
  }
  attr {
    name: "Nsparse"
    type: "int"
    has_minimum: true
  }
  attr {
    name: "input_order"
    type: "string"
  }
  attr {
    name: "hashed_output"
    type: "bool"
  }
  attr {
    name: "num_buckets"
    type: "int"
    has_minimum: true
  }
  attr {
    name: "hash_key"
    type: "int"
  }
  attr {
    name: "ragged_values_types"
    type: "list(type)"
    has_minimum: true
    allowed_values {
      list {
        type: DT_INT64
        type: DT_STRING
      }
    }
  }
  attr {
    name: "ragged_splits_types"
    type: "list(type)"
    has_minimum: true
    allowed_values {
      list {
        type: DT_INT32
        type: DT_INT64
      }
    }
  }
  attr {
    name: "sparse_values_types"
    type: "list(type)"
    has_minimum: true
    allowed_values {
      list {
        type: DT_INT64
        type: DT_STRING
      }
    }
  }
  attr {
    name: "dense_types"
    type: "list(type)"
    has_minimum: true
    allowed_values {
      list {
        type: DT_INT64
        type: DT_STRING
      }
    }
  }
  attr {
    name: "out_values_type"
    type: "type"
    allowed_values {
      list {
        type: DT_INT64
        type: DT_STRING
      }
    }
  }
  attr {
    name: "out_row_splits_type"
    type: "type"
    allowed_values {
      list {
        type: DT_INT32
        type: DT_INT64
      }
    }
  }
}
