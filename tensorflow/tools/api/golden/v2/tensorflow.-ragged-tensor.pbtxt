path: "tensorflow.RaggedTensor"
tf_class {
  is_instance: "<class \'tensorflow.python.ops.ragged.ragged_tensor.RaggedTensor\'>"
  is_instance: "<class \'tensorflow.python.framework.composite_tensor.CompositeTensor\'>"
  is_instance: "<class \'tensorflow.python.types.internal.NativeObject\'>"
  is_instance: "<class \'tensorflow.python.types.internal.RaggedTensor\'>"
  is_instance: "<type \'object\'>"
  member {
    name: "dtype"
    mtype: "<type \'property\'>"
  }
  member {
    name: "flat_values"
    mtype: "<type \'property\'>"
  }
  member {
    name: "nested_row_splits"
    mtype: "<type \'property\'>"
  }
  member {
    name: "ragged_rank"
    mtype: "<type \'property\'>"
  }
  member {
    name: "row_splits"
    mtype: "<type \'property\'>"
  }
  member {
    name: "shape"
    mtype: "<type \'property\'>"
  }
  member {
    name: "uniform_row_length"
    mtype: "<type \'property\'>"
  }
  member {
    name: "values"
    mtype: "<type \'property\'>"
  }
  member_method {
    name: "__init__"
    argspec: "args=[\'self\', \'values\', \'row_partition\', \'internal\'], varargs=None, keywords=None, defaults=[\'False\'], "
  }
  member_method {
    name: "bounding_shape"
    argspec: "args=[\'self\', \'axis\', \'name\', \'out_type\'], varargs=None, keywords=None, defaults=[\'None\', \'None\', \'None\'], "
  }
  member_method {
    name: "consumers"
    argspec: "args=[\'self\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "from_nested_row_lengths"
    argspec: "args=[\'cls\', \'flat_values\', \'nested_row_lengths\', \'name\', \'validate\'], varargs=None, keywords=None, defaults=[\'None\', \'True\'], "
  }
  member_method {
    name: "from_nested_row_splits"
    argspec: "args=[\'cls\', \'flat_values\', \'nested_row_splits\', \'name\', \'validate\'], varargs=None, keywords=None, defaults=[\'None\', \'True\'], "
  }
  member_method {
    name: "from_nested_value_rowids"
    argspec: "args=[\'cls\', \'flat_values\', \'nested_value_rowids\', \'nested_nrows\', \'name\', \'validate\'], varargs=None, keywords=None, defaults=[\'None\', \'None\', \'True\'], "
  }
  member_method {
    name: "from_row_lengths"
    argspec: "args=[\'cls\', \'values\', \'row_lengths\', \'name\', \'validate\'], varargs=None, keywords=None, defaults=[\'None\', \'True\'], "
  }
  member_method {
    name: "from_row_limits"
    argspec: "args=[\'cls\', \'values\', \'row_limits\', \'name\', \'validate\'], varargs=None, keywords=None, defaults=[\'None\', \'True\'], "
  }
  member_method {
    name: "from_row_splits"
    argspec: "args=[\'cls\', \'values\', \'row_splits\', \'name\', \'validate\'], varargs=None, keywords=None, defaults=[\'None\', \'True\'], "
  }
  member_method {
    name: "from_row_starts"
    argspec: "args=[\'cls\', \'values\', \'row_starts\', \'name\', \'validate\'], varargs=None, keywords=None, defaults=[\'None\', \'True\'], "
  }
  member_method {
    name: "from_sparse"
    argspec: "args=[\'cls\', \'st_input\', \'name\', \'row_splits_dtype\'], varargs=None, keywords=None, defaults=[\'None\', \"<dtype: \'int64\'>\"], "
  }
  member_method {
    name: "from_tensor"
    argspec: "args=[\'cls\', \'tensor\', \'lengths\', \'padding\', \'ragged_rank\', \'name\', \'row_splits_dtype\'], varargs=None, keywords=None, defaults=[\'None\', \'None\', \'1\', \'None\', \"<dtype: \'int64\'>\"], "
  }
  member_method {
    name: "from_uniform_row_length"
    argspec: "args=[\'cls\', \'values\', \'uniform_row_length\', \'nrows\', \'validate\', \'name\'], varargs=None, keywords=None, defaults=[\'None\', \'True\', \'None\'], "
  }
  member_method {
    name: "from_value_rowids"
    argspec: "args=[\'cls\', \'values\', \'value_rowids\', \'nrows\', \'name\', \'validate\'], varargs=None, keywords=None, defaults=[\'None\', \'None\', \'True\'], "
  }
  member_method {
    name: "get_shape"
    argspec: "args=[\'self\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "merge_dims"
    argspec: "args=[\'self\', \'outer_axis\', \'inner_axis\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "nested_row_lengths"
    argspec: "args=[\'self\', \'name\'], varargs=None, keywords=None, defaults=[\'None\'], "
  }
  member_method {
    name: "nested_value_rowids"
    argspec: "args=[\'self\', \'name\'], varargs=None, keywords=None, defaults=[\'None\'], "
  }
  member_method {
    name: "nrows"
    argspec: "args=[\'self\', \'out_type\', \'name\'], varargs=None, keywords=None, defaults=[\'None\', \'None\'], "
  }
  member_method {
    name: "numpy"
    argspec: "args=[\'self\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "row_lengths"
    argspec: "args=[\'self\', \'axis\', \'name\'], varargs=None, keywords=None, defaults=[\'1\', \'None\'], "
  }
  member_method {
    name: "row_limits"
    argspec: "args=[\'self\', \'name\'], varargs=None, keywords=None, defaults=[\'None\'], "
  }
  member_method {
    name: "row_starts"
    argspec: "args=[\'self\', \'name\'], varargs=None, keywords=None, defaults=[\'None\'], "
  }
  member_method {
    name: "to_list"
    argspec: "args=[\'self\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "to_sparse"
    argspec: "args=[\'self\', \'name\'], varargs=None, keywords=None, defaults=[\'None\'], "
  }
  member_method {
    name: "to_tensor"
    argspec: "args=[\'self\', \'default_value\', \'name\', \'shape\'], varargs=None, keywords=None, defaults=[\'None\', \'None\', \'None\'], "
  }
  member_method {
    name: "value_rowids"
    argspec: "args=[\'self\', \'name\'], varargs=None, keywords=None, defaults=[\'None\'], "
  }
  member_method {
    name: "with_flat_values"
    argspec: "args=[\'self\', \'new_values\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "with_row_splits_dtype"
    argspec: "args=[\'self\', \'dtype\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "with_values"
    argspec: "args=[\'self\', \'new_values\'], varargs=None, keywords=None, defaults=None"
  }
}
