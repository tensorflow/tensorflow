path: "tensorflow.experimental.dtensor"
tf_module {
  member {
    name: "DTensorCheckpoint"
    mtype: "<type \'type\'>"
  }
  member {
    name: "DTensorDataset"
    mtype: "<type \'type\'>"
  }
  member {
    name: "DVariable"
    mtype: "<class \'tensorflow.python.ops.variables.VariableMetaclass\'>"
  }
  member {
    name: "Layout"
    mtype: "<class \'pybind11_builtins.pybind11_type\'>"
  }
  member {
    name: "MATCH"
    mtype: "<type \'str\'>"
  }
  member {
    name: "Mesh"
    mtype: "<class \'pybind11_builtins.pybind11_type\'>"
  }
  member {
    name: "UNSHARDED"
    mtype: "<type \'str\'>"
  }
  member_method {
    name: "barrier"
    argspec: "args=[\'mesh\', \'barrier_name\', \'timeout_in_ms\'], varargs=None, keywords=None, defaults=[\'None\', \'None\'], "
  }
  member_method {
    name: "call_with_layout"
    argspec: "args=[\'fn\', \'layout\'], varargs=args, keywords=kwargs, defaults=None"
  }
  member_method {
    name: "check_layout"
    argspec: "args=[\'tensor\', \'layout\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "client_id"
    argspec: "args=[], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "copy_to_mesh"
    argspec: "args=[\'tensor\', \'layout\', \'source_layout\'], varargs=None, keywords=None, defaults=[\'None\'], "
  }
  member_method {
    name: "create_distributed_mesh"
    argspec: "args=[\'mesh_dims\', \'mesh_name\', \'local_devices\', \'device_type\', \'use_xla_spmd\'], varargs=None, keywords=None, defaults=[\'\', \'None\', \'None\', \'False\'], "
  }
  member_method {
    name: "create_mesh"
    argspec: "args=[\'mesh_dims\', \'mesh_name\', \'devices\', \'device_type\', \'use_xla_spmd\'], varargs=None, keywords=None, defaults=[\'None\', \'\', \'None\', \'None\', \'False\'], "
  }
  member_method {
    name: "create_tpu_mesh"
    argspec: "args=[\'mesh_dim_names\', \'mesh_shape\', \'mesh_name\', \'ring_dims\', \'ring_axes\', \'ring_bounds\', \'can_split_host_across_rings\', \'build_ring_across_rings\', \'rotate_ring_across_rings\', \'use_xla_spmd\'], varargs=None, keywords=None, defaults=[\'None\', \'None\', \'None\', \'True\', \'False\', \'False\', \'False\'], "
  }
  member_method {
    name: "default_mesh"
    argspec: "args=[], varargs=args, keywords=kwds, defaults=None"
  }
  member_method {
    name: "device_name"
    argspec: "args=[], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "enable_save_as_bf16"
    argspec: "args=[\'variables\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "fetch_layout"
    argspec: "args=[\'tensor\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "full_job_name"
    argspec: "args=[\'task_id\'], varargs=None, keywords=None, defaults=[\'None\'], "
  }
  member_method {
    name: "get_default_mesh"
    argspec: "args=[], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "heartbeat_enabled"
    argspec: "args=[], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "initialize_accelerator_system"
    argspec: "args=[\'device_type\', \'enable_coordination_service\', \'num_logical_cpu_devices\', \'experimental_reset_context\', \'experimental_enable_megcore\'], varargs=None, keywords=None, defaults=[\'None\', \'True\', \'None\', \'False\', \'False\'], "
  }
  member_method {
    name: "initialize_multi_client"
    argspec: "args=[\'device_type\', \'enable_coordination_service\', \'num_logical_cpu_devices\', \'experimental_reset_context\', \'experimental_enable_megcore\'], varargs=None, keywords=None, defaults=[\'None\', \'True\', \'None\', \'False\', \'False\'], "
  }
  member_method {
    name: "initialize_tpu_system"
    argspec: "args=[\'device_type\', \'enable_coordination_service\', \'num_logical_cpu_devices\', \'experimental_reset_context\', \'experimental_enable_megcore\'], varargs=None, keywords=None, defaults=[\'None\', \'True\', \'None\', \'False\', \'False\'], "
  }
  member_method {
    name: "is_dtensor"
    argspec: "args=[\'tensor\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "job_name"
    argspec: "args=[], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "jobs"
    argspec: "args=[], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "local_devices"
    argspec: "args=[\'device_type\', \'for_client_id\'], varargs=None, keywords=None, defaults=[\'None\'], "
  }
  member_method {
    name: "name_based_restore"
    argspec: "args=[\'mesh\', \'checkpoint_prefix\', \'name_tensor_dict\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "name_based_save"
    argspec: "args=[\'mesh\', \'checkpoint_prefix\', \'name_tensor_dict\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "num_clients"
    argspec: "args=[], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "num_global_devices"
    argspec: "args=[\'device_type\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "num_local_devices"
    argspec: "args=[\'device_type\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "pack"
    argspec: "args=[\'tensors\', \'layout\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "preferred_device_type"
    argspec: "args=[], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "relayout"
    argspec: "args=[\'tensor\', \'layout\', \'name\'], varargs=None, keywords=None, defaults=[\'None\'], "
  }
  member_method {
    name: "relayout_like"
    argspec: "args=[\'tensor\', \'layout_tensor\', \'name\'], varargs=None, keywords=None, defaults=[\'None\'], "
  }
  member_method {
    name: "run_on"
    argspec: "args=[], varargs=args, keywords=kwds, defaults=None"
  }
  member_method {
    name: "sharded_save"
    argspec: "args=[\'mesh\', \'file_prefix\', \'tensor_names\', \'shape_and_slices\', \'tensors\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "shutdown_accelerator_system"
    argspec: "args=[], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "shutdown_tpu_system"
    argspec: "args=[], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "unpack"
    argspec: "args=[\'tensor\'], varargs=None, keywords=None, defaults=None"
  }
}
