path: "tensorflow.layers.BatchNormalization"
tf_class {
  is_instance: "<class \'tf_keras.legacy_tf_layers.normalization.BatchNormalization\'>"
  is_instance: "<class \'tf_keras.layers.normalization.batch_normalization_v1.BatchNormalization\'>"
  is_instance: "<class \'tf_keras.layers.normalization.batch_normalization.BatchNormalizationBase\'>"
  is_instance: "<class \'tf_keras.legacy_tf_layers.base.Layer\'>"
  is_instance: "<class \'tf_keras.engine.base_layer_v1.Layer\'>"
  is_instance: "<class \'tf_keras.engine.base_layer.Layer\'>"
  is_instance: "<class \'tensorflow.python.module.module.Module\'>"
  is_instance: "<class \'tensorflow.python.trackable.autotrackable.AutoTrackable\'>"
  is_instance: "<class \'tensorflow.python.trackable.base.Trackable\'>"
  is_instance: "<class \'tf_keras.utils.version_utils.LayerVersionSelector\'>"
  is_instance: "<type \'object\'>"
  member {
    name: "activity_regularizer"
    mtype: "<type \'property\'>"
  }
  member {
    name: "compute_dtype"
    mtype: "<type \'property\'>"
  }
  member {
    name: "dtype"
    mtype: "<type \'property\'>"
  }
  member {
    name: "dtype_policy"
    mtype: "<type \'property\'>"
  }
  member {
    name: "dynamic"
    mtype: "<type \'property\'>"
  }
  member {
    name: "graph"
    mtype: "<type \'property\'>"
  }
  member {
    name: "inbound_nodes"
    mtype: "<type \'property\'>"
  }
  member {
    name: "input"
    mtype: "<type \'property\'>"
  }
  member {
    name: "input_mask"
    mtype: "<type \'property\'>"
  }
  member {
    name: "input_shape"
    mtype: "<type \'property\'>"
  }
  member {
    name: "input_spec"
    mtype: "<type \'property\'>"
  }
  member {
    name: "losses"
    mtype: "<type \'property\'>"
  }
  member {
    name: "metrics"
    mtype: "<type \'property\'>"
  }
  member {
    name: "name"
    mtype: "<type \'property\'>"
  }
  member {
    name: "name_scope"
    mtype: "<type \'property\'>"
  }
  member {
    name: "non_trainable_variables"
    mtype: "<type \'property\'>"
  }
  member {
    name: "non_trainable_weights"
    mtype: "<type \'property\'>"
  }
  member {
    name: "outbound_nodes"
    mtype: "<type \'property\'>"
  }
  member {
    name: "output"
    mtype: "<type \'property\'>"
  }
  member {
    name: "output_mask"
    mtype: "<type \'property\'>"
  }
  member {
    name: "output_shape"
    mtype: "<type \'property\'>"
  }
  member {
    name: "scope_name"
    mtype: "<type \'property\'>"
  }
  member {
    name: "stateful"
    mtype: "<type \'property\'>"
  }
  member {
    name: "submodules"
    mtype: "<type \'property\'>"
  }
  member {
    name: "supports_masking"
    mtype: "<type \'property\'>"
  }
  member {
    name: "trainable"
    mtype: "<type \'property\'>"
  }
  member {
    name: "trainable_variables"
    mtype: "<type \'property\'>"
  }
  member {
    name: "trainable_weights"
    mtype: "<type \'property\'>"
  }
  member {
    name: "updates"
    mtype: "<type \'property\'>"
  }
  member {
    name: "variable_dtype"
    mtype: "<type \'property\'>"
  }
  member {
    name: "variables"
    mtype: "<type \'property\'>"
  }
  member {
    name: "weights"
    mtype: "<type \'property\'>"
  }
  member_method {
    name: "__init__"
    argspec: "args=[\'self\', \'axis\', \'momentum\', \'epsilon\', \'center\', \'scale\', \'beta_initializer\', \'gamma_initializer\', \'moving_mean_initializer\', \'moving_variance_initializer\', \'beta_regularizer\', \'gamma_regularizer\', \'beta_constraint\', \'gamma_constraint\', \'renorm\', \'renorm_clipping\', \'renorm_momentum\', \'fused\', \'trainable\', \'virtual_batch_size\', \'adjustment\', \'name\'], varargs=None, keywords=kwargs, defaults=[\'-1\', \'0.99\', \'0.001\', \'True\', \'True\', \'<tensorflow.python.ops.init_ops.Zeros object instance>\', \'<tensorflow.python.ops.init_ops.Ones object instance>\', \'<tensorflow.python.ops.init_ops.Zeros object instance>\', \'<tensorflow.python.ops.init_ops.Ones object instance>\', \'None\', \'None\', \'None\', \'None\', \'False\', \'None\', \'0.99\', \'None\', \'True\', \'None\', \'None\', \'None\'], "
  }
  member_method {
    name: "add_loss"
    argspec: "args=[\'self\', \'losses\', \'inputs\'], varargs=None, keywords=None, defaults=[\'None\'], "
  }
  member_method {
    name: "add_metric"
    argspec: "args=[\'self\', \'value\', \'aggregation\', \'name\'], varargs=None, keywords=None, defaults=[\'None\', \'None\'], "
  }
  member_method {
    name: "add_update"
    argspec: "args=[\'self\', \'updates\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "add_variable"
    argspec: "args=[\'self\'], varargs=args, keywords=kwargs, defaults=None"
  }
  member_method {
    name: "add_weight"
    argspec: "args=[\'self\', \'name\', \'shape\', \'dtype\', \'initializer\', \'regularizer\', \'trainable\', \'constraint\', \'use_resource\', \'synchronization\', \'aggregation\', \'partitioner\'], varargs=None, keywords=kwargs, defaults=[\'None\', \'None\', \'None\', \'None\', \'None\', \'None\', \'VariableSynchronization.AUTO\', \'VariableAggregation.NONE\', \'None\'], "
  }
  member_method {
    name: "apply"
    argspec: "args=[\'self\'], varargs=args, keywords=kwargs, defaults=None"
  }
  member_method {
    name: "build"
    argspec: "args=[\'self\', \'input_shape\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "build_from_config"
    argspec: "args=[\'self\', \'config\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "call"
    argspec: "args=[\'self\', \'inputs\', \'training\', \'mask\'], varargs=None, keywords=None, defaults=[\'False\', \'None\'], "
  }
  member_method {
    name: "compute_mask"
    argspec: "args=[\'self\', \'inputs\', \'mask\'], varargs=None, keywords=None, defaults=[\'None\'], "
  }
  member_method {
    name: "compute_output_shape"
    argspec: "args=[\'self\', \'input_shape\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "compute_output_signature"
    argspec: "args=[\'self\', \'input_signature\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "count_params"
    argspec: "args=[\'self\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "finalize_state"
    argspec: "args=[\'self\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "from_config"
    argspec: "args=[\'cls\', \'config\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "get_build_config"
    argspec: "args=[\'self\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "get_config"
    argspec: "args=[\'self\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "get_input_at"
    argspec: "args=[\'self\', \'node_index\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "get_input_mask_at"
    argspec: "args=[\'self\', \'node_index\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "get_input_shape_at"
    argspec: "args=[\'self\', \'node_index\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "get_losses_for"
    argspec: "args=[\'self\', \'inputs\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "get_output_at"
    argspec: "args=[\'self\', \'node_index\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "get_output_mask_at"
    argspec: "args=[\'self\', \'node_index\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "get_output_shape_at"
    argspec: "args=[\'self\', \'node_index\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "get_updates_for"
    argspec: "args=[\'self\', \'inputs\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "get_weights"
    argspec: "args=[\'self\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "load_own_variables"
    argspec: "args=[\'self\', \'store\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "save_own_variables"
    argspec: "args=[\'self\', \'store\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "set_weights"
    argspec: "args=[\'self\', \'weights\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "with_name_scope"
    argspec: "args=[\'cls\', \'method\'], varargs=None, keywords=None, defaults=None"
  }
}
