path: "tensorflow.train.CheckpointManager"
tf_class {
  is_instance: "<class \'tensorflow.python.checkpoint.checkpoint_management.CheckpointManager\'>"
  is_instance: "<type \'object\'>"
  member {
    name: "checkpoint"
    mtype: "<type \'property\'>"
  }
  member {
    name: "checkpoint_interval"
    mtype: "<type \'property\'>"
  }
  member {
    name: "checkpoints"
    mtype: "<type \'property\'>"
  }
  member {
    name: "directory"
    mtype: "<type \'property\'>"
  }
  member {
    name: "latest_checkpoint"
    mtype: "<type \'property\'>"
  }
  member_method {
    name: "__init__"
    argspec: "args=[\'self\', \'checkpoint\', \'directory\', \'max_to_keep\', \'keep_checkpoint_every_n_hours\', \'checkpoint_name\', \'step_counter\', \'checkpoint_interval\', \'init_fn\', \'last_checkpoint_step\'], varargs=None, keywords=None, defaults=[\'None\', \'ckpt\', \'None\', \'None\', \'None\', \'None\'], "
  }
  member_method {
    name: "restore_or_initialize"
    argspec: "args=[\'self\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "save"
    argspec: "args=[\'self\', \'checkpoint_number\', \'check_interval\', \'options\'], varargs=None, keywords=None, defaults=[\'None\', \'True\', \'None\'], "
  }
  member_method {
    name: "sync"
    argspec: "args=[\'self\'], varargs=None, keywords=None, defaults=None"
  }
}
