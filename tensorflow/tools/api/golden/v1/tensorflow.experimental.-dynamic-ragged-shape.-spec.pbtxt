path: "tensorflow.experimental.DynamicRaggedShape.Spec"
tf_class {
  is_instance: "<class \'tensorflow.python.ops.ragged.dynamic_ragged_shape.DynamicRaggedShape.Spec\'>"
  is_instance: "<class \'tensorflow.python.framework.extension_type.BatchableExtensionTypeSpec\'>"
  is_instance: "<class \'tensorflow.python.framework.extension_type.ExtensionTypeSpec\'>"
  is_instance: "<class \'tensorflow.python.framework.type_spec.BatchableTypeSpec\'>"
  is_instance: "<class \'tensorflow.python.framework.type_spec.TypeSpec\'>"
  is_instance: "<class \'tensorflow.python.types.internal.TypeSpec\'>"
  is_instance: "<class \'tensorflow.python.types.trace.TraceType\'>"
  is_instance: "<class \'tensorflow.core.function.trace_type.serialization.Serializable\'>"
  is_instance: "<type \'object\'>"
  member {
    name: "dtype"
    mtype: "<type \'property\'>"
  }
  member {
    name: "inner_rank"
    mtype: "<type \'property\'>"
  }
  member {
    name: "num_row_partitions"
    mtype: "<type \'property\'>"
  }
  member {
    name: "rank"
    mtype: "<type \'property\'>"
  }
  member {
    name: "value_type"
    mtype: "<class \'tensorflow.python.framework.extension_type.ExtensionTypeMetaclass\'>"
  }
  member_method {
    name: "__init__"
    argspec: "args=[\'self\', \'row_partitions\', \'static_inner_shape\', \'dtype\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "cast"
    argspec: "args=[\'self\', \'value\', \'casting_context\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "experimental_as_proto"
    argspec: "args=[\'self\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "experimental_from_proto"
    argspec: "args=[\'cls\', \'proto\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "experimental_type_proto"
    argspec: "args=[\'cls\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "flatten"
    argspec: "args=[\'self\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "from_tensors"
    argspec: "args=[\'self\', \'tensors\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "from_value"
    argspec: "args=[\'cls\', \'value\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "is_compatible_with"
    argspec: "args=[\'self\', \'spec_or_value\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "is_subtype_of"
    argspec: "args=[\'self\', \'other\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "most_specific_common_supertype"
    argspec: "args=[\'self\', \'others\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "most_specific_compatible_type"
    argspec: "args=[\'self\', \'other\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "placeholder_value"
    argspec: "args=[\'self\', \'placeholder_context\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "to_tensors"
    argspec: "args=[\'self\', \'value\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "with_dtype"
    argspec: "args=[\'self\', \'dtype\'], varargs=None, keywords=None, defaults=None"
  }
}
