path: "tensorflow.train.AdamOptimizer"
tf_class {
  is_instance: "<class \'tensorflow.python.training.adam.AdamOptimizer\'>"
  is_instance: "<class \'tensorflow.python.training.optimizer.Optimizer\'>"
  is_instance: "<class \'tensorflow.python.trackable.base.Trackable\'>"
  is_instance: "<type \'object\'>"
  member {
    name: "GATE_GRAPH"
    mtype: "<type \'int\'>"
  }
  member {
    name: "GATE_NONE"
    mtype: "<type \'int\'>"
  }
  member {
    name: "GATE_OP"
    mtype: "<type \'int\'>"
  }
  member_method {
    name: "__init__"
    argspec: "args=[\'self\', \'learning_rate\', \'beta1\', \'beta2\', \'epsilon\', \'use_locking\', \'name\', \'use_own_namescope_for_non_slot_vars\'], varargs=None, keywords=None, defaults=[\'0.001\', \'0.9\', \'0.999\', \'1e-08\', \'False\', \'Adam\', \'False\'], "
  }
  member_method {
    name: "apply_gradients"
    argspec: "args=[\'self\', \'grads_and_vars\', \'global_step\', \'name\', \'skip_gradients_aggregation\'], varargs=None, keywords=None, defaults=[\'None\', \'None\', \'False\'], "
  }
  member_method {
    name: "compute_gradients"
    argspec: "args=[\'self\', \'loss\', \'var_list\', \'gate_gradients\', \'aggregation_method\', \'colocate_gradients_with_ops\', \'grad_loss\'], varargs=None, keywords=None, defaults=[\'None\', \'1\', \'None\', \'False\', \'None\'], "
  }
  member_method {
    name: "get_name"
    argspec: "args=[\'self\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "get_slot"
    argspec: "args=[\'self\', \'var\', \'name\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "get_slot_names"
    argspec: "args=[\'self\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "minimize"
    argspec: "args=[\'self\', \'loss\', \'global_step\', \'var_list\', \'gate_gradients\', \'aggregation_method\', \'colocate_gradients_with_ops\', \'name\', \'grad_loss\'], varargs=None, keywords=None, defaults=[\'None\', \'None\', \'1\', \'None\', \'False\', \'None\', \'None\'], "
  }
  member_method {
    name: "variables"
    argspec: "args=[\'self\'], varargs=None, keywords=None, defaults=None"
  }
}
